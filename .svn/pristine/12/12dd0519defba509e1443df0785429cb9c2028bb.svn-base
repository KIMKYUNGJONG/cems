[{"D:\\work\\sng\\synergy_2021_0114\\src\\index.tsx":"1","D:\\work\\sng\\synergy_2021_0114\\src\\reportWebVitals.ts":"2","D:\\work\\sng\\synergy_2021_0114\\src\\App.tsx":"3","D:\\work\\sng\\synergy_2021_0114\\src\\Layout\\LayoutContainer.tsx":"4","D:\\work\\sng\\synergy_2021_0114\\src\\Layout\\Layout.tsx":"5","D:\\work\\sng\\synergy_2021_0114\\src\\constant\\theme.ts":"6","D:\\work\\sng\\synergy_2021_0114\\src\\containers\\DashboardContainer.tsx":"7","D:\\work\\sng\\synergy_2021_0114\\src\\components\\Navbar\\Navbar.tsx":"8","D:\\work\\sng\\synergy_2021_0114\\src\\lib\\api.ts":"9","D:\\work\\sng\\synergy_2021_0114\\src\\components\\Navbar\\NavbarBottom.tsx":"10","D:\\work\\sng\\synergy_2021_0114\\src\\components\\Navbar\\NavbarLogo.tsx":"11","D:\\work\\sng\\synergy_2021_0114\\src\\components\\Navbar\\NavbarMenu.tsx":"12","D:\\work\\sng\\synergy_2021_0114\\src\\pages\\Dashboard\\Dashboard.tsx":"13","D:\\work\\sng\\synergy_2021_0114\\src\\constant\\routes.ts":"14","D:\\work\\sng\\synergy_2021_0114\\src\\components\\Common\\Icon.tsx":"15","D:\\work\\sng\\synergy_2021_0114\\src\\pages\\Dashboard\\DashboardMap.tsx":"16","D:\\work\\sng\\synergy_2021_0114\\src\\pages\\Dashboard\\DashboardEx.tsx":"17","D:\\work\\sng\\synergy_2021_0114\\src\\components\\HtView\\index.js":"18","D:\\work\\토목계측시스템\\cem\\src\\index.tsx":"19","D:\\work\\토목계측시스템\\cem\\src\\reportWebVitals.ts":"20","D:\\work\\토목계측시스템\\cem\\src\\App.tsx":"21","D:\\work\\토목계측시스템\\cem\\src\\Layout\\LayoutContainer.tsx":"22","D:\\work\\토목계측시스템\\cem\\src\\Layout\\Layout.tsx":"23","D:\\work\\토목계측시스템\\cem\\src\\constant\\theme.ts":"24","D:\\work\\토목계측시스템\\cem\\src\\containers\\DashboardContainer.tsx":"25","D:\\work\\토목계측시스템\\cem\\src\\components\\Navbar\\Navbar.tsx":"26","D:\\work\\토목계측시스템\\cem\\src\\lib\\api.ts":"27","D:\\work\\토목계측시스템\\cem\\src\\components\\Navbar\\NavbarBottom.tsx":"28","D:\\work\\토목계측시스템\\cem\\src\\components\\Navbar\\NavbarLogo.tsx":"29","D:\\work\\토목계측시스템\\cem\\src\\components\\Navbar\\NavbarMenu.tsx":"30","D:\\work\\토목계측시스템\\cem\\src\\pages\\Dashboard\\Dashboard.tsx":"31","D:\\work\\토목계측시스템\\cem\\src\\constant\\routes.ts":"32","D:\\work\\토목계측시스템\\cem\\src\\components\\Common\\Icon.tsx":"33","D:\\work\\토목계측시스템\\cem\\src\\pages\\Dashboard\\DashboardMap.tsx":"34","D:\\work\\토목계측시스템\\cem\\src\\components\\HtView\\index.js":"35","D:\\work\\토목계측시스템\\cem\\src\\components\\Card\\Card.tsx":"36","D:\\work\\토목계측시스템\\cem\\src\\pages\\Dashboard\\DashboardList.tsx":"37","D:\\work\\토목계측시스템\\cem\\src\\components\\Table\\Table.tsx":"38","D:\\work\\토목계측시스템\\cem\\src\\components\\Table\\SampleTable.tsx":"39","D:\\work\\토목계측시스템\\cem\\src\\containers\\LoginContainer.tsx":"40","D:\\work\\토목계측시스템\\cem\\src\\pages\\Login\\Login.tsx":"41","D:\\work\\토목계측시스템\\cem\\src\\Routes\\AuthenticateRoute.tsx":"42","D:\\work\\토목계측시스템\\cem\\src\\containers\\SmsContainer.tsx":"43","D:\\work\\토목계측시스템\\cem\\src\\containers\\ReportContainer.tsx":"44","D:\\work\\토목계측시스템\\cem\\src\\pages\\Report\\Report.tsx":"45","D:\\work\\토목계측시스템\\cem\\src\\pages\\Sms\\Sms.tsx":"46","D:\\work\\토목계측시스템\\cem\\src\\pages\\Login\\LoginForm.tsx":"47","D:\\work\\토목계측시스템\\cem\\src\\containers\\AdminContainer.tsx":"48","D:\\work\\토목계측시스템\\cem\\src\\pages\\Admin\\Admin.tsx":"49","D:\\work\\토목계측시스템\\cem\\src\\components\\Common\\AddButton.tsx":"50","D:\\work\\토목계측시스템\\cem\\src\\components\\Drawer\\Drawer.tsx":"51","D:\\work\\토목계측시스템\\cem\\src\\components\\Modal\\Modal.tsx":"52","D:\\work\\토목계측시스템\\cem\\src\\components\\Form\\Project.tsx":"53","D:\\work\\토목계측시스템\\cem\\src\\components\\Form\\User.tsx":"54","D:\\work\\토목계측시스템\\cem\\src\\constant\\Admin.ts":"55","D:\\work\\토목계측시스템\\cem\\src\\pages\\Admin\\ProjectTable.tsx":"56","D:\\work\\토목계측시스템\\cem\\src\\pages\\Admin\\UserTable.tsx":"57"},{"size":524,"mtime":1610077330000,"results":"58","hashOfConfig":"59"},{"size":425,"mtime":1606893762000,"results":"60","hashOfConfig":"59"},{"size":160,"mtime":1610000600000,"results":"61","hashOfConfig":"59"},{"size":153,"mtime":1610000600000,"results":"62","hashOfConfig":"59"},{"size":1826,"mtime":1610595719382,"results":"63","hashOfConfig":"59"},{"size":4541,"mtime":1610000600000,"results":"64","hashOfConfig":"59"},{"size":2009,"mtime":1613705679860,"results":"65","hashOfConfig":"59"},{"size":1032,"mtime":1613705677637,"results":"66","hashOfConfig":"59"},{"size":300,"mtime":1610257944000,"results":"67","hashOfConfig":"59"},{"size":915,"mtime":1610000600000,"results":"68","hashOfConfig":"59"},{"size":689,"mtime":1610000600000,"results":"69","hashOfConfig":"59"},{"size":750,"mtime":1613705674863,"results":"70","hashOfConfig":"59"},{"size":722,"mtime":1610549082738,"results":"71","hashOfConfig":"59"},{"size":292,"mtime":1610000600000,"results":"72","hashOfConfig":"59"},{"size":1867,"mtime":1610000600000,"results":"73","hashOfConfig":"59"},{"size":1756,"mtime":1610550580729,"results":"74","hashOfConfig":"59"},{"size":982,"mtime":1613705699478,"results":"75","hashOfConfig":"59"},{"size":1791,"mtime":1610550452798,"results":"76","hashOfConfig":"59"},{"size":477,"mtime":1631165421555,"results":"77","hashOfConfig":"78"},{"size":425,"mtime":1606893762000,"results":"79","hashOfConfig":"78"},{"size":160,"mtime":1630562549080,"results":"80","hashOfConfig":"78"},{"size":335,"mtime":1631243435911,"results":"81","hashOfConfig":"78"},{"size":3438,"mtime":1631242636512,"results":"82","hashOfConfig":"78"},{"size":1943,"mtime":1631082162734,"results":"83","hashOfConfig":"78"},{"size":2219,"mtime":1630562959229,"results":"84","hashOfConfig":"78"},{"size":1286,"mtime":1630652615968,"results":"85","hashOfConfig":"78"},{"size":275,"mtime":1630562549099,"results":"86","hashOfConfig":"78"},{"size":1186,"mtime":1630994096231,"results":"87","hashOfConfig":"78"},{"size":687,"mtime":1630562549091,"results":"88","hashOfConfig":"78"},{"size":1842,"mtime":1631242526057,"results":"89","hashOfConfig":"78"},{"size":842,"mtime":1630562959231,"results":"90","hashOfConfig":"78"},{"size":209,"mtime":1631156146660,"results":"91","hashOfConfig":"78"},{"size":1427,"mtime":1631173780799,"results":"92","hashOfConfig":"78"},{"size":1792,"mtime":1630562549101,"results":"93","hashOfConfig":"78"},{"size":1920,"mtime":1630562549088,"results":"94","hashOfConfig":"78"},{"size":2077,"mtime":1630562959224,"results":"95","hashOfConfig":"78"},{"size":3074,"mtime":1631002356521,"results":"96","hashOfConfig":"78"},{"size":846,"mtime":1630564099872,"results":"97","hashOfConfig":"78"},{"size":723,"mtime":1630562959226,"results":"98","hashOfConfig":"78"},{"size":2207,"mtime":1630918787439,"results":"99","hashOfConfig":"78"},{"size":423,"mtime":1630655404510,"results":"100","hashOfConfig":"78"},{"size":417,"mtime":1630993995056,"results":"101","hashOfConfig":"78"},{"size":1802,"mtime":1630649100529,"results":"102","hashOfConfig":"78"},{"size":1820,"mtime":1630649039852,"results":"103","hashOfConfig":"78"},{"size":408,"mtime":1630649326617,"results":"104","hashOfConfig":"78"},{"size":361,"mtime":1630649095936,"results":"105","hashOfConfig":"78"},{"size":1917,"mtime":1630918521593,"results":"106","hashOfConfig":"78"},{"size":763,"mtime":1631172485599,"results":"107","hashOfConfig":"78"},{"size":4899,"mtime":1631250097813,"results":"108","hashOfConfig":"78"},{"size":449,"mtime":1631163623751,"results":"109","hashOfConfig":"78"},{"size":930,"mtime":1631170200606,"results":"110","hashOfConfig":"78"},{"size":751,"mtime":1631245575632,"results":"111","hashOfConfig":"78"},{"size":3664,"mtime":1631245705593,"results":"112","hashOfConfig":"78"},{"size":3318,"mtime":1631176000336,"results":"113","hashOfConfig":"78"},{"size":1626,"mtime":1631173995382,"results":"114","hashOfConfig":"78"},{"size":2133,"mtime":1631250142184,"results":"115","hashOfConfig":"78"},{"size":2017,"mtime":1631174454470,"results":"116","hashOfConfig":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},"yec7fh",{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"119"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"119"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},"1e6pl3o",{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"158"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"158"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"158"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"158"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"158"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"158"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"158"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"158"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"158"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"158"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"158"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"236"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"158"},"D:\\work\\sng\\synergy_2021_0114\\src\\index.tsx",[],["250","251"],"D:\\work\\sng\\synergy_2021_0114\\src\\reportWebVitals.ts",[],"D:\\work\\sng\\synergy_2021_0114\\src\\App.tsx",[],"D:\\work\\sng\\synergy_2021_0114\\src\\Layout\\LayoutContainer.tsx",[],"D:\\work\\sng\\synergy_2021_0114\\src\\Layout\\Layout.tsx",["252"],"import React, { useState } from 'react'\r\nimport styled, { createGlobalStyle, ThemeProvider } from 'styled-components'\r\nimport { reset } from 'styled-reset'\r\n\r\nimport Navbar from '../components/Navbar/Navbar'\r\nimport { DarkTheme, LightTheme } from '../constant/theme'\r\nimport DashboardContainer from '../containers/DashboardContainer'\r\n\r\nconst Layout = () => {\r\n    const [theme, setTheme] = useState<Theme>('light')\r\n    const themes = {\r\n        light: LightTheme,\r\n        dark: DarkTheme,\r\n    }\r\n    type Theme = keyof typeof themes\r\n\r\n    const changeTheme = (checked: boolean) => {\r\n        if (checked) setTheme('dark')\r\n        if (!checked) setTheme('light')\r\n    }\r\n\r\n    const [scene, setScene] = useState<string|undefined>('scenes/ioe/securebiz/mdf_room 40_10.11.json');\r\n    const [graphValue, setHtValue] = useState<object|undefined>({});\r\n    const handleGraphView: (param: object) => void = function (param) {\r\n        setHtValue(param);\r\n      };\r\n    const handleScene: (param: string) => void = function (param) {\r\n        setScene(param);\r\n      }; \r\n    return (\r\n        <ThemeProvider theme={themes[theme]}>\r\n            <GlobalStyle />\r\n            <Navbar changeTheme={changeTheme} handleScene={handleScene}/>\r\n            <DashboardContainer htValue={graphValue} handleGraphView={handleGraphView} scene={scene} />\r\n        </ThemeProvider>\r\n    )\r\n}\r\nconst GlobalStyle = createGlobalStyle`\r\n  ${reset}\r\n  \r\n    body {\r\n        width: 100%;\r\n        height: 100%;\r\n        position: relative;\r\n        overflow: hidden;\r\n        font-family: 'NanumSquare', 'Roboto', sans-serif;\r\n        background-color: gainsboro;\r\n\r\n    }\r\n    button {\r\n        appearance: none;\r\n        outline: none;\r\n        border: none;\r\n        background: none;\r\n        cursor: pointer;\r\n    }\r\n`\r\nexport default Layout\r\n","D:\\work\\sng\\synergy_2021_0114\\src\\constant\\theme.ts",[],"D:\\work\\sng\\synergy_2021_0114\\src\\containers\\DashboardContainer.tsx",["253","254","255","256"],"D:\\work\\sng\\synergy_2021_0114\\src\\components\\Navbar\\Navbar.tsx",[],"D:\\work\\sng\\synergy_2021_0114\\src\\lib\\api.ts",[],"D:\\work\\sng\\synergy_2021_0114\\src\\components\\Navbar\\NavbarBottom.tsx",[],"D:\\work\\sng\\synergy_2021_0114\\src\\components\\Navbar\\NavbarLogo.tsx",[],"D:\\work\\sng\\synergy_2021_0114\\src\\components\\Navbar\\NavbarMenu.tsx",["257","258"],"D:\\work\\sng\\synergy_2021_0114\\src\\pages\\Dashboard\\Dashboard.tsx",[],"D:\\work\\sng\\synergy_2021_0114\\src\\constant\\routes.ts",[],"D:\\work\\sng\\synergy_2021_0114\\src\\components\\Common\\Icon.tsx",[],"D:\\work\\sng\\synergy_2021_0114\\src\\pages\\Dashboard\\DashboardMap.tsx",["259","260","261","262"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport HtView from '../../components/HtView';\r\nimport axios from 'axios'\r\nimport { useAsync } from 'react-async'\r\nimport { apiGet } from '../../lib/api'\r\n\r\nfunction DashboardMap(props:any) {\r\n  const htView = useRef<any>();\r\n  const render = () => {\r\n    \r\n    const scene = htView.current.getScene();\r\n    if(scene === props.scene){\r\n    \tif(props.pushdata){\r\n\t\tupdateDM(props.pushdata);\r\n\t}\r\n    }else{\r\n    \thtView.current.setScene(props.scene);\r\n\tconst graphView = htView.current.getGraphView();\r\n\tprops.getGraphView(graphView); \r\n\tgraphView.isHooked = undefined;\r\n\thtView.current.clearDM();\r\n\tgraphView.deserialize(props.scene, (json:any) => {\t\t    \r\n\t\t    let dataModel = htView.current.getDataModel();\r\n\t\t    let panel = dataModel.getDataByTag('dataPanel1');\r\n\t\t    if(panel){\r\n\t\t\tpanel.a('data', [10,20,30,40,50,60,70,80,90]);\r\n\t\t\tgraphView.invalidateShape3dCachedImage(panel);\r\n\t\t\tconsole.log(panel);\r\n\t\t    }\r\n\t\t\tsetTimeout(() => {\r\n\r\n\t\t\t}, 3000);\r\n\r\n\t    });\r\n    }\r\n\r\n  };\r\n  const updateDM = (data:any) => {\r\n\t\r\n\t//htView component api 사용\r\n\t//pullData 가 채워 졌을시 call updateDM()\r\n\thtView.current.updateDM(data);\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    render();\r\n  });\r\n\r\n\r\n  return (\r\n    <>\r\n      <HtView ref={htView} type=\"3d\" autoInvalidate style={{position: 'absolute', left: 0, top: 0, bottom: 0, width: '100%', height: '100%' }}/>\r\n      {/* <iframe\r\n        src=\"http://13.125.195.34:9901/scene.html?tag=scenes/sngy/%EB%8C%80%EA%B5%AC%EC%95%84%EC%84%B8%EC%95%84%ED%85%8D.json\"\r\n        title=\"dd\"\r\n        style={{ position: 'absolute', left: 0, top: 0, bottom: 0, width: '100%', height: '100%' }}\r\n      /> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DashboardMap;\r\n","D:\\work\\sng\\synergy_2021_0114\\src\\pages\\Dashboard\\DashboardEx.tsx",[],"D:\\work\\sng\\synergy_2021_0114\\src\\components\\HtView\\index.js",[],"D:\\work\\토목계측시스템\\cem\\src\\index.tsx",[],["263","264"],"D:\\work\\토목계측시스템\\cem\\src\\reportWebVitals.ts",[],"D:\\work\\토목계측시스템\\cem\\src\\App.tsx",[],"D:\\work\\토목계측시스템\\cem\\src\\Layout\\LayoutContainer.tsx",[],"D:\\work\\토목계측시스템\\cem\\src\\Layout\\Layout.tsx",["265","266","267","268","269","270"],"D:\\work\\토목계측시스템\\cem\\src\\constant\\theme.ts",[],"D:\\work\\토목계측시스템\\cem\\src\\containers\\DashboardContainer.tsx",["271","272","273","274"],"import axios from 'axios';\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { useAsync } from 'react-async';\r\nimport { apiGet } from '../lib/api';\r\nimport Dashboard from '../pages/Dashboard/Dashboard';\r\nimport HtView from '../components/HtView';\r\nimport { Data } from '../constant/Dashboard';\r\n\r\nconst fetchClusterData = async () => {\r\n  const res = await apiGet({\r\n    url: 'https://gorest.co.in/public-api/comments',\r\n  });\r\n  return res.data;\r\n};\r\nconst URL = 'ws://localhost:5000';\r\n\r\n// 더미데이터\r\nconst data =\r\n{\r\n  code: '1073042884',\r\n  name: 'dummy Project',\r\n  coords: ['10.15151', '10.15151'],\r\n  regDate: '2021-08-30'\r\n};\r\n\r\nfunction DashboardContainer(props: any) {\r\n  const htView = useRef<any>();\r\n  const clusterData = useAsync({\r\n    deferFn: fetchClusterData,\r\n    initialValue: [],\r\n  });\r\n\r\n  const [ui_data, setUi_data] = useState<Data[]>([]);\r\n\r\n  // Initialize Websocket\r\n  //const wsClient = new WebSocket(URL, ['Token', \"token_body_here\"])\r\n\r\n  const [ws, setWs] = useState<WebSocket>();\r\n\r\n  const __bootstrap_async__ = () => {\r\n    setWs(new WebSocket(URL, ['Token', 'token_body_here']));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      if (!ws) {\r\n        __bootstrap_async__();\r\n      } else {\r\n        ws.onopen = () => {\r\n          console.log('opened');\r\n        };\r\n        ws.onmessage = (event) => {\r\n          //setUi_data((old) => [...old, event.data])\r\n          setUi_data((old) => [event.data, ...old].splice(0, 9));\r\n          //htView component api 사용\r\n          //data pushed 시 call updateDM()\r\n          //문제 있음\r\n          //htView.current.updateDM(([{\"tag\": \"dataPanel1\", \"data\":[ui_data]}]););\r\n        };\r\n        ws.onerror = (err) => {\r\n          console.log(err);\r\n        };\r\n        ws.onclose = () => {\r\n          console.log('closed');\r\n        };\r\n      }\r\n\r\n      return () => {\r\n        ws?.close();\r\n      };\r\n    }, 0);\r\n  }, [ws]);\r\n\r\n  useEffect(() => {\r\n    clusterData.run();\r\n  }, []);\r\n  return <Dashboard data={data} pushdata={[{ 'tag': 'dataPanel1', 'data': ui_data }]} htValue={props.htValue} handleGraphView={props.handleGraphView} scene={props.scene} />;\r\n}\r\n\r\nexport default DashboardContainer;\r\n","D:\\work\\토목계측시스템\\cem\\src\\components\\Navbar\\Navbar.tsx",[],"D:\\work\\토목계측시스템\\cem\\src\\lib\\api.ts",[],"D:\\work\\토목계측시스템\\cem\\src\\components\\Navbar\\NavbarBottom.tsx",["275"],"import { Switch } from 'antd';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport logo from '../../assets/logo.svg';\r\n\r\nfunction NavbarBottom({\r\n  changeTheme,\r\n}: {\r\n  changeTheme: (checked: boolean) => void\r\n}) {\r\n  return (\r\n    <>\r\n      <UserText>\r\n        <p>안녕하세요. 000님</p>\r\n      </UserText>\r\n      <AvatarImg />\r\n\r\n      <SwitchBlock>\r\n        <span>Theme</span>\r\n        <Switch\r\n          style={{ width: 48, marginTop: 5 }}\r\n          onChange={changeTheme}\r\n        />\r\n      </SwitchBlock>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nconst SwitchBlock = styled.div`\r\n    font-family: Roboto;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    font-size: 12px;\r\n    line-height: 13px;\r\n    text-align: center;\r\n    letter-spacing: 0.44px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-right:10px;\r\n`;\r\nconst AvatarImg = styled.div`\r\n    width: 30px;\r\n    height: 30px;\r\n    cursor: pointer;\r\n    background: ${(props) => props.theme.iconUrl};\r\n    background-size: cover;\r\n`;\r\nconst UserText = styled.div`\r\n    display: flex;\r\n    \r\n    & p {\r\n      font-size: 14px;\r\n      margin-right: 10px;\r\n    }\r\n`;\r\nexport default NavbarBottom;\r\n","D:\\work\\토목계측시스템\\cem\\src\\components\\Navbar\\NavbarLogo.tsx",[],"D:\\work\\토목계측시스템\\cem\\src\\components\\Navbar\\NavbarMenu.tsx",["276","277","278"],"D:\\work\\토목계측시스템\\cem\\src\\pages\\Dashboard\\Dashboard.tsx",[],"D:\\work\\토목계측시스템\\cem\\src\\constant\\routes.ts",[],"D:\\work\\토목계측시스템\\cem\\src\\components\\Common\\Icon.tsx",[],"D:\\work\\토목계측시스템\\cem\\src\\pages\\Dashboard\\DashboardMap.tsx",["279","280","281","282"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport HtView from '../../components/HtView';\r\nimport axios from 'axios';\r\nimport { useAsync } from 'react-async';\r\nimport { apiGet } from '../../lib/api';\r\n\r\nfunction DashboardMap(props:any) {\r\n  const htView = useRef<any>();\r\n  const render = () => {\r\n    const scene = htView.current.getScene();\r\n    if (scene === props.scene) {\r\n    \tif (props.pushdata) {\r\n        updateDM(props.pushdata);\r\n      }\r\n    } else {\r\n    \thtView.current.setScene(props.scene);\r\n      const graphView = htView.current.getGraphView();\r\n      props.getGraphView(graphView); \r\n      graphView.isHooked = undefined;\r\n      htView.current.clearDM();\r\n      graphView.deserialize(props.scene, (json:any) => {\t\t    \r\n\t\t    const dataModel = htView.current.getDataModel();\r\n\t\t    const panel = dataModel.getDataByTag('dataPanel1');\r\n\t\t    if (panel) {\r\n          panel.a('data', [10, 20, 30, 40, 50, 60, 70, 80, 90]);\r\n          graphView.invalidateShape3dCachedImage(panel);\r\n          console.log(panel);\r\n\t\t    }\r\n\t    });\r\n    }\r\n  };\r\n  const updateDM = (data:any) => {\r\n    //htView component api 사용\r\n    //pullData 가 채워 졌을시 call updateDM()\r\n    htView.current.updateDM(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    render();\r\n  });\r\n\r\n\r\n  return (\r\n    <>\r\n      <HtView ref={htView} type=\"3d\" autoInvalidate style={{ position: 'absolute', left: 0, top: 0, bottom: 0, width: '100%', height: '100%' }}/>\r\n      {/* <iframe\r\n        src=\"http://13.125.195.34:9901/scene.html?tag=scenes/sngy/%EB%8C%80%EA%B5%AC%EC%95%84%EC%84%B8%EC%95%84%ED%85%8D.json\"\r\n        title=\"dd\"\r\n        style={{ position: 'absolute', left: 0, top: 0, bottom: 0, width: '100%', height: '100%' }}\r\n      /> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DashboardMap;\r\n","D:\\work\\토목계측시스템\\cem\\src\\components\\HtView\\index.js",[],["283","284"],"D:\\work\\토목계측시스템\\cem\\src\\components\\Card\\Card.tsx",["285","286"],"import React, {useState} from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Skeleton, Switch, Card as CardFrame } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\ninterface IProps {\r\n  data: {\r\n    code: string;\r\n    name: string;\r\n    coords: string[];\r\n    regDate: string;\r\n  },\r\n  loading?: boolean\r\n}\r\nconst Card = ({data, loading}:IProps)=> {\r\n  return(\r\n    <CardBlock>\r\n    <CardFrame  loading={loading} style={{borderRadius:'10px'}}>\r\n        <p><label>project code</label>{data.code}</p>\r\n        <p><label>project name</label> {data.name}</p>\r\n        <p><label>Longitude, Latitude</label> {data.coords}</p>\r\n        <p><label>Register Date</label> {data.regDate}</p>\r\n      <Skeleton loading={loading} active>\r\n        \r\n      </Skeleton>\r\n    </CardFrame>\r\n    <MonitorBtn onClick={()=>alert('clicked')}>Go Data Monitoring</MonitorBtn>\r\n    </CardBlock>\r\n  )\r\n}\r\nconst CardBlock = styled.div`\r\n    color: ${(props) => props.theme.fontColor};\r\n\r\n    & .ant-card {\r\n      border-radius: 10px;\r\n      border-color:${(props) => props.theme.clusterBg};\r\n      background-color: ${(props) => props.theme.clusterBg};\r\n    }\r\n    & .ant-card-body {\r\n      height: 300px;\r\n      padding: 10px;\r\n      color: ${(props) => props.theme.fontColor};\r\n\r\n      & p {\r\n        margin-bottom: 8px;\r\n        font-size: 14px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n        align-items: flex-start;\r\n\r\n        & label {\r\n          font-size: 18px;\r\n          font-weight: bold;\r\n          color: ${(props) => props.theme.iconColor};\r\n          margin-bottom: 5px;\r\n        }\r\n      }\r\n    }\r\n\r\n`\r\nconst MonitorBtn = styled.div`\r\n  cursor: pointer;\r\n  color: ${(props) => props.theme.fontColor};\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-top: 12px;\r\n  border-radius: 10px;\r\n  text-align: center;\r\n  background-color: ${(props) => props.theme.searchbarBg};\r\n  transition: background-color .2s ease-in-out;\r\n\r\n  &:hover {\r\n    background-color: ${(props) => props.theme.siteListBg};\r\n  }\r\n`;\r\n\r\nexport default Card;","D:\\work\\토목계측시스템\\cem\\src\\pages\\Dashboard\\DashboardList.tsx",[],"D:\\work\\토목계측시스템\\cem\\src\\components\\Table\\Table.tsx",["287"],"import React, { useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table as AtTable, Radio } from 'antd';\r\n\r\n// 샘플 테이블 데이터\r\nimport { columns, data } from '../../components/Table/SampleTable';\r\n\r\ninterface IProps {\r\n  data?: object[];\r\n  columns?: object[];\r\n  handleClick?: Function;\r\n}\r\n\r\nconst Table = ({ handleClick }: IProps) => {\r\n  const [value, setValue] = useState({});\r\n  const handleRowClick = (record: object) => {\r\n    setValue(record);\r\n  };\r\n\r\n  console.log(value);\r\n  return (\r\n    <>\r\n      <AtTable\r\n        onRow={(record, rowIndex) => {\r\n          return {\r\n            onClick: event => { handleRowClick(record); }, // click row\r\n          };\r\n        }}\r\n        columns={columns} dataSource={data} pagination={{ pageSize: 10 }} scroll={{ y: 140 }} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Table;","D:\\work\\토목계측시스템\\cem\\src\\components\\Table\\SampleTable.tsx",["288","289","290","291"],"import React, { useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Tag, Space } from 'antd';\r\n\r\nexport const columns = [\r\n  {\r\n    title: 'Project',\r\n    dataIndex: 'project',\r\n    key: 'project',\r\n    render: (text: string) => (<a>{text}</a>),\r\n  },\r\n  {\r\n    title: 'Code',\r\n    key: 'code',\r\n    render: (text: string, record: any, index: number) => (\r\n      <Space size=\"middle\">\r\n        <a>{record.code}</a>\r\n      </Space>\r\n    ),\r\n  },\r\n];\r\n\r\nexport const data = [\r\n  {\r\n    key: '1',\r\n    project: 'project_10',\r\n    code: ['108850'],\r\n  },\r\n  {\r\n    key: '2',\r\n    project: 'project_68',\r\n    code: ['684550'],\r\n  },\r\n  {\r\n    key: '3',\r\n    project: 'project_19',\r\n    code: ['198778'],\r\n  },\r\n];\r\n","D:\\work\\토목계측시스템\\cem\\src\\containers\\LoginContainer.tsx",["292","293","294","295"],"import axios from 'axios';\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { useAsync } from 'react-async';\r\nimport { apiGet } from '../lib/api';\r\nimport Login from '../pages/Login/Login';\r\nimport { Data } from '../constant/Dashboard';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst fetchClusterData = async () => {\r\n  const res = await apiGet({\r\n    url: 'https://gorest.co.in/public-api/comments',\r\n  });\r\n  return res.data;\r\n};\r\nconst URL = 'ws://localhost:5000';\r\n\r\nfunction LoginContainer({ path, isLogin, component }: any) {\r\n  const clusterData = useAsync({\r\n    deferFn: fetchClusterData,\r\n    initialValue: [],\r\n  });\r\n\r\n  const history = useHistory();\r\n  const [ui_data, setUi_data] = useState<Data[]>([]);\r\n  const [isAuth, setAuth] = useState<string>('false');\r\n  // Initialize Websocket\r\n  //const wsClient = new WebSocket(URL, ['Token', \"token_body_here\"])\r\n  const handleLogin = (value: object): void => {\r\n    isLogin = isAuth;\r\n    setAuth('true');\r\n    sessionStorage.setItem('isAuthorized', isAuth);\r\n    history.push('/dashboard');\r\n  };\r\n  console.log(isAuth);\r\n\r\n  const [ws, setWs] = useState<WebSocket>();\r\n  const __bootstrap_async__ = () => {\r\n    setWs(new WebSocket(URL, ['Token', 'token_body_here']));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      if (!ws) {\r\n        __bootstrap_async__();\r\n      } else {\r\n        ws.onopen = () => {\r\n          console.log('opened');\r\n        };\r\n        ws.onmessage = (event) => {\r\n          //setUi_data((old) => [...old, event.data])\r\n          setUi_data((old) => [event.data, ...old].splice(0, 9));\r\n          //htView component api 사용\r\n          //data pushed 시 call updateDM()\r\n          //문제 있음\r\n          //htView.current.updateDM(([{\"tag\": \"dataPanel1\", \"data\":[ui_data]}]););\r\n        };\r\n        ws.onerror = (err) => {\r\n          console.log(err);\r\n        };\r\n        ws.onclose = () => {\r\n          console.log('closed');\r\n        };\r\n      }\r\n\r\n      return () => {\r\n        ws?.close();\r\n      };\r\n    }, 0);\r\n  }, [ws]);\r\n\r\n  useEffect(() => {\r\n    clusterData.run();\r\n  }, []);\r\n  return <Login handleLogin={handleLogin} />;\r\n}\r\n\r\nexport default LoginContainer;\r\n","D:\\work\\토목계측시스템\\cem\\src\\pages\\Login\\Login.tsx",[],"D:\\work\\토목계측시스템\\cem\\src\\Routes\\AuthenticateRoute.tsx",["296"],"import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\ninterface IRoute {\r\n  path: string;\r\n  render: any;\r\n  exact?: boolean;\r\n  isLogin?: string | null;\r\n}\r\nfunction AuthenticatedRoute({ path, render, exact, isLogin }: IRoute) {\r\n  return (isLogin === 'true') ? (<Route path={path} render={render} />) : (<Redirect to=\"/login\" />);\r\n}\r\n\r\nexport default AuthenticatedRoute;","D:\\work\\토목계측시스템\\cem\\src\\containers\\SmsContainer.tsx",["297","298","299","300"],"import axios from 'axios';\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { useAsync } from 'react-async';\r\nimport { apiGet } from '../lib/api';\r\nimport Sms from '../pages/Sms/Sms';\r\nimport { Data } from '../constant/Dashboard';\r\n\r\nconst fetchClusterData = async () => {\r\n  const res = await apiGet({\r\n    url: 'https://gorest.co.in/public-api/comments',\r\n  });\r\n  return res.data;\r\n};\r\nconst URL = 'ws://localhost:5000';\r\n\r\nfunction SmsContainer(props: any) {\r\n  const clusterData = useAsync({\r\n    deferFn: fetchClusterData,\r\n    initialValue: [],\r\n  });\r\n\r\n  const [ui_data, setUi_data] = useState<Data[]>([]);\r\n\r\n  // Initialize Websocket\r\n  //const wsClient = new WebSocket(URL, ['Token', \"token_body_here\"])\r\n\r\n  const [ws, setWs] = useState<WebSocket>();\r\n\r\n  const __bootstrap_async__ = () => {\r\n    setWs(new WebSocket(URL, ['Token', 'token_body_here']));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      if (!ws) {\r\n        __bootstrap_async__();\r\n      } else {\r\n        ws.onopen = () => {\r\n          console.log('opened');\r\n        };\r\n        ws.onmessage = (event) => {\r\n          //setUi_data((old) => [...old, event.data])\r\n          setUi_data((old) => [event.data, ...old].splice(0, 9));\r\n          //htView component api 사용\r\n          //data pushed 시 call updateDM()\r\n          //문제 있음\r\n          //htView.current.updateDM(([{\"tag\": \"dataPanel1\", \"data\":[ui_data]}]););\r\n        };\r\n        ws.onerror = (err) => {\r\n          console.log(err);\r\n        };\r\n        ws.onclose = () => {\r\n          console.log('closed');\r\n        };\r\n      }\r\n\r\n      return () => {\r\n        ws?.close();\r\n      };\r\n    }, 0);\r\n  }, [ws]);\r\n\r\n  useEffect(() => {\r\n    clusterData.run();\r\n  }, []);\r\n  return <Sms />;\r\n}\r\n\r\nexport default SmsContainer;\r\n","D:\\work\\토목계측시스템\\cem\\src\\containers\\ReportContainer.tsx",["301","302","303","304"],"import axios from 'axios';\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { useAsync } from 'react-async';\r\nimport { apiGet } from '../lib/api';\r\nimport Report from '../pages/Report/Report';\r\nimport { Data } from '../constant/Dashboard';\r\n\r\nconst fetchClusterData = async () => {\r\n  const res = await apiGet({\r\n    url: 'https://gorest.co.in/public-api/comments',\r\n  });\r\n  return res.data;\r\n};\r\nconst URL = 'ws://localhost:5000';\r\n\r\nfunction ReportContainer(props: any) {\r\n  const clusterData = useAsync({\r\n    deferFn: fetchClusterData,\r\n    initialValue: [],\r\n  });\r\n\r\n  const [ui_data, setUi_data] = useState<Data[]>([]);\r\n\r\n  // Initialize Websocket\r\n  //const wsClient = new WebSocket(URL, ['Token', \"token_body_here\"])\r\n\r\n  const [ws, setWs] = useState<WebSocket>();\r\n\r\n  const __bootstrap_async__ = () => {\r\n    setWs(new WebSocket(URL, ['Token', 'token_body_here']));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      if (!ws) {\r\n        __bootstrap_async__();\r\n      } else {\r\n        ws.onopen = () => {\r\n          console.log('opened');\r\n        };\r\n        ws.onmessage = (event) => {\r\n          //setUi_data((old) => [...old, event.data])\r\n          setUi_data((old) => [event.data, ...old].splice(0, 9));\r\n          //htView component api 사용\r\n          //data pushed 시 call updateDM()\r\n          //문제 있음\r\n          //htView.current.updateDM(([{\"tag\": \"dataPanel1\", \"data\":[ui_data]}]););\r\n        };\r\n        ws.onerror = (err) => {\r\n          console.log(err);\r\n        };\r\n        ws.onclose = () => {\r\n          console.log('closed');\r\n        };\r\n      }\r\n\r\n      return () => {\r\n        ws?.close();\r\n      };\r\n    }, 0);\r\n  }, [ws]);\r\n\r\n  useEffect(() => {\r\n    clusterData.run();\r\n  }, []);\r\n  return <Report />;\r\n}\r\n\r\nexport default ReportContainer;\r\n","D:\\work\\토목계측시스템\\cem\\src\\pages\\Report\\Report.tsx",[],"D:\\work\\토목계측시스템\\cem\\src\\pages\\Sms\\Sms.tsx",[],"D:\\work\\토목계측시스템\\cem\\src\\pages\\Login\\LoginForm.tsx",[],"D:\\work\\토목계측시스템\\cem\\src\\containers\\AdminContainer.tsx",["305","306","307","308","309"],"import axios from 'axios';\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { useAsync } from 'react-async';\r\nimport { apiGet } from '../lib/api';\r\nimport Admin from '../pages/Admin/Admin';\r\nimport { Data } from '../constant/Dashboard';\r\nimport { dataSource } from '../constant/Admin';\r\n\r\nconst fetchClusterData = async () => {\r\n  const res = await apiGet({\r\n    url: 'https://gorest.co.in/public-api/comments',\r\n  });\r\n  return res.data;\r\n};\r\nfunction AdminContainer(props: any) {\r\n  const clusterData = useAsync({\r\n    deferFn: fetchClusterData,\r\n    initialValue: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    clusterData.run();\r\n  }, []);\r\n  return <Admin data={dataSource} sampleData={clusterData.data} />;\r\n}\r\n\r\nexport default AdminContainer;\r\n","D:\\work\\토목계측시스템\\cem\\src\\pages\\Admin\\Admin.tsx",["310","311","312","313","314","315","316","317"],"D:\\work\\토목계측시스템\\cem\\src\\components\\Common\\AddButton.tsx",[],"D:\\work\\토목계측시스템\\cem\\src\\components\\Drawer\\Drawer.tsx",["318","319"],"import React, { useState } from 'react';\r\nimport { Drawer, Tabs } from 'antd';\r\nimport { IDrawer, IUser } from '../../constant/Admin';\r\n\r\nconst { TabPane } = Tabs;\r\nfunction callback(key: string) {\r\n  console.log(key);\r\n}\r\nconst AntDrawer = (props: IDrawer) => {\r\n  const { data, onClose, visible } = props;\r\n  return (\r\n    <>\r\n      <Drawer title=\"User Info\" placement=\"right\" onClose={onClose} visible={visible}>\r\n        <Tabs defaultActiveKey=\"1\" onChange={callback}>\r\n          <TabPane tab=\"Tab 1\" key=\"1\">\r\n            <p>USERID : {data?.key}</p>\r\n            <p>USERNAME : {data?.name}</p>\r\n            <p>USERAGE : {data?.age}</p>\r\n            <p>USERADDRESS : {data?.address}</p>\r\n          </TabPane>\r\n          <TabPane tab=\"Tab 2\" key=\"2\">\r\n            Content of Tab Pane 2\r\n          </TabPane>\r\n          <TabPane tab=\"Tab 3\" key=\"3\">\r\n            Content of Tab Pane 3\r\n          </TabPane>\r\n        </Tabs>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AntDrawer;",["320","321"],"D:\\work\\토목계측시스템\\cem\\src\\components\\Modal\\Modal.tsx",["322","323"],"D:\\work\\토목계측시스템\\cem\\src\\components\\Form\\Project.tsx",[],"D:\\work\\토목계측시스템\\cem\\src\\components\\Form\\User.tsx",[],"D:\\work\\토목계측시스템\\cem\\src\\constant\\Admin.ts",[],"D:\\work\\토목계측시스템\\cem\\src\\pages\\Admin\\ProjectTable.tsx",["324"],"D:\\work\\토목계측시스템\\cem\\src\\pages\\Admin\\UserTable.tsx",["325","326"],"import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Table, Tag, Space, Button } from 'antd';\r\nimport { IUser } from './Interface';\r\n\r\nfunction UserTable({ dataSource, handleInfomation }: any) {\r\n  const columns = [\r\n    {\r\n      title: '사용자 아이디',\r\n      dataIndex: 'id',\r\n      key: 'id'\r\n    },\r\n    {\r\n      title: '회사명',\r\n      dataIndex: 'company',\r\n      key: 'company'\r\n    },\r\n    {\r\n      title: '담당자 명',\r\n      dataIndex: 'manager',\r\n      key: 'manager',\r\n    },\r\n    {\r\n      title: '연락처',\r\n      dataIndex: 'contact',\r\n      key: 'contact',\r\n    },\r\n    {\r\n      title: 'E-mail',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n    },\r\n    {\r\n      title: '프로젝트 리스트',\r\n      key: 'project',\r\n      dataIndex: 'project',\r\n      render: (projectList: string[], record: any) => (\r\n        <>\r\n          {projectList.map(list => {\r\n            const color = list.length > 5 ? 'geekblue' : 'green';\r\n            return (\r\n              <Tag color={color} key={list}>\r\n                {list.toUpperCase()}\r\n              </Tag>\r\n            );\r\n          })}\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: '노트',\r\n      dataIndex: 'note',\r\n      key: 'note',\r\n      render: (text: string) => {\r\n        return <NoteText>{text}</NoteText>;\r\n      }\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (text: string, record: any) => (\r\n        <Space size=\"middle\">\r\n          <Button type=\"primary\" onClick={(event) => {\r\n            console.log('clickModify');\r\n            handleInfomation(record);\r\n          }}>정보변경</Button>\r\n          <Button type=\"primary\" danger onClick={(event) => {\r\n            console.log('clickDelete');\r\n          }}>삭제</Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Table dataSource={dataSource} columns={columns} />\r\n  );\r\n}\r\n\r\nconst NoteText = styled.span`\r\n  display: flex;\r\n  width: 120px;\r\n`;\r\nexport default UserTable;\r\n",{"ruleId":"327","replacedBy":"328"},{"ruleId":"329","replacedBy":"330"},{"ruleId":"331","severity":1,"message":"332","line":2,"column":8,"nodeType":"333","messageId":"334","endLine":2,"endColumn":14},{"ruleId":"331","severity":1,"message":"335","line":1,"column":8,"nodeType":"333","messageId":"334","endLine":1,"endColumn":13},{"ruleId":"331","severity":1,"message":"336","line":6,"column":8,"nodeType":"333","messageId":"334","endLine":6,"endColumn":14},{"ruleId":"331","severity":1,"message":"337","line":17,"column":9,"nodeType":"333","messageId":"334","endLine":17,"endColumn":15},{"ruleId":"338","severity":1,"message":"339","line":66,"column":6,"nodeType":"340","endLine":66,"endColumn":8,"suggestions":"341"},{"ruleId":"331","severity":1,"message":"342","line":1,"column":17,"nodeType":"333","messageId":"334","endLine":1,"endColumn":26},{"ruleId":"331","severity":1,"message":"343","line":1,"column":28,"nodeType":"333","messageId":"334","endLine":1,"endColumn":34},{"ruleId":"331","severity":1,"message":"344","line":1,"column":36,"nodeType":"333","messageId":"334","endLine":1,"endColumn":44},{"ruleId":"331","severity":1,"message":"335","line":3,"column":8,"nodeType":"333","messageId":"334","endLine":3,"endColumn":13},{"ruleId":"331","severity":1,"message":"345","line":4,"column":10,"nodeType":"333","messageId":"334","endLine":4,"endColumn":18},{"ruleId":"331","severity":1,"message":"346","line":5,"column":10,"nodeType":"333","messageId":"334","endLine":5,"endColumn":16},{"ruleId":"327","replacedBy":"347"},{"ruleId":"329","replacedBy":"348"},{"ruleId":"331","severity":1,"message":"332","line":3,"column":8,"nodeType":"333","messageId":"334","endLine":3,"endColumn":14},{"ruleId":"331","severity":1,"message":"349","line":5,"column":35,"nodeType":"333","messageId":"334","endLine":5,"endColumn":54},{"ruleId":"331","severity":1,"message":"350","line":16,"column":10,"nodeType":"333","messageId":"334","endLine":16,"endColumn":14},{"ruleId":"331","severity":1,"message":"351","line":16,"column":16,"nodeType":"333","messageId":"334","endLine":16,"endColumn":21},{"ruleId":"331","severity":1,"message":"352","line":16,"column":23,"nodeType":"333","messageId":"334","endLine":16,"endColumn":29},{"ruleId":"331","severity":1,"message":"353","line":16,"column":31,"nodeType":"333","messageId":"334","endLine":16,"endColumn":39},{"ruleId":"331","severity":1,"message":"335","line":1,"column":8,"nodeType":"333","messageId":"334","endLine":1,"endColumn":13},{"ruleId":"331","severity":1,"message":"336","line":6,"column":8,"nodeType":"333","messageId":"334","endLine":6,"endColumn":14},{"ruleId":"331","severity":1,"message":"337","line":27,"column":9,"nodeType":"333","messageId":"334","endLine":27,"endColumn":15},{"ruleId":"338","severity":1,"message":"339","line":76,"column":6,"nodeType":"340","endLine":76,"endColumn":8,"suggestions":"354"},{"ruleId":"331","severity":1,"message":"355","line":4,"column":8,"nodeType":"333","messageId":"334","endLine":4,"endColumn":12},{"ruleId":"331","severity":1,"message":"342","line":1,"column":17,"nodeType":"333","messageId":"334","endLine":1,"endColumn":26},{"ruleId":"331","severity":1,"message":"343","line":1,"column":28,"nodeType":"333","messageId":"334","endLine":1,"endColumn":34},{"ruleId":"331","severity":1,"message":"356","line":5,"column":10,"nodeType":"333","messageId":"334","endLine":5,"endColumn":19},{"ruleId":"331","severity":1,"message":"344","line":1,"column":36,"nodeType":"333","messageId":"334","endLine":1,"endColumn":44},{"ruleId":"331","severity":1,"message":"335","line":3,"column":8,"nodeType":"333","messageId":"334","endLine":3,"endColumn":13},{"ruleId":"331","severity":1,"message":"345","line":4,"column":10,"nodeType":"333","messageId":"334","endLine":4,"endColumn":18},{"ruleId":"331","severity":1,"message":"346","line":5,"column":10,"nodeType":"333","messageId":"334","endLine":5,"endColumn":16},{"ruleId":"327","replacedBy":"347"},{"ruleId":"329","replacedBy":"348"},{"ruleId":"331","severity":1,"message":"344","line":1,"column":16,"nodeType":"333","messageId":"334","endLine":1,"endColumn":24},{"ruleId":"331","severity":1,"message":"357","line":3,"column":20,"nodeType":"333","messageId":"334","endLine":3,"endColumn":26},{"ruleId":"331","severity":1,"message":"358","line":3,"column":28,"nodeType":"333","messageId":"334","endLine":3,"endColumn":33},{"ruleId":"331","severity":1,"message":"344","line":1,"column":17,"nodeType":"333","messageId":"334","endLine":1,"endColumn":25},{"ruleId":"331","severity":1,"message":"359","line":3,"column":10,"nodeType":"333","messageId":"334","endLine":3,"endColumn":13},{"ruleId":"360","severity":1,"message":"361","line":10,"column":32,"nodeType":"362","endLine":10,"endColumn":35},{"ruleId":"360","severity":1,"message":"361","line":17,"column":9,"nodeType":"362","endLine":17,"endColumn":12},{"ruleId":"331","severity":1,"message":"335","line":1,"column":8,"nodeType":"333","messageId":"334","endLine":1,"endColumn":13},{"ruleId":"331","severity":1,"message":"343","line":2,"column":38,"nodeType":"333","messageId":"334","endLine":2,"endColumn":44},{"ruleId":"331","severity":1,"message":"363","line":24,"column":10,"nodeType":"333","messageId":"334","endLine":24,"endColumn":17},{"ruleId":"338","severity":1,"message":"339","line":73,"column":6,"nodeType":"340","endLine":73,"endColumn":8,"suggestions":"364"},{"ruleId":"331","severity":1,"message":"365","line":1,"column":17,"nodeType":"333","messageId":"334","endLine":1,"endColumn":26},{"ruleId":"331","severity":1,"message":"335","line":1,"column":8,"nodeType":"333","messageId":"334","endLine":1,"endColumn":13},{"ruleId":"331","severity":1,"message":"343","line":2,"column":38,"nodeType":"333","messageId":"334","endLine":2,"endColumn":44},{"ruleId":"331","severity":1,"message":"363","line":22,"column":10,"nodeType":"333","messageId":"334","endLine":22,"endColumn":17},{"ruleId":"338","severity":1,"message":"339","line":65,"column":6,"nodeType":"340","endLine":65,"endColumn":8,"suggestions":"366"},{"ruleId":"331","severity":1,"message":"335","line":1,"column":8,"nodeType":"333","messageId":"334","endLine":1,"endColumn":13},{"ruleId":"331","severity":1,"message":"343","line":2,"column":38,"nodeType":"333","messageId":"334","endLine":2,"endColumn":44},{"ruleId":"331","severity":1,"message":"363","line":22,"column":10,"nodeType":"333","messageId":"334","endLine":22,"endColumn":17},{"ruleId":"338","severity":1,"message":"339","line":65,"column":6,"nodeType":"340","endLine":65,"endColumn":8,"suggestions":"367"},{"ruleId":"331","severity":1,"message":"335","line":1,"column":8,"nodeType":"333","messageId":"334","endLine":1,"endColumn":13},{"ruleId":"331","severity":1,"message":"344","line":2,"column":28,"nodeType":"333","messageId":"334","endLine":2,"endColumn":36},{"ruleId":"331","severity":1,"message":"343","line":2,"column":38,"nodeType":"333","messageId":"334","endLine":2,"endColumn":44},{"ruleId":"331","severity":1,"message":"368","line":6,"column":10,"nodeType":"333","messageId":"334","endLine":6,"endColumn":14},{"ruleId":"338","severity":1,"message":"339","line":23,"column":6,"nodeType":"340","endLine":23,"endColumn":8,"suggestions":"369"},{"ruleId":"331","severity":1,"message":"370","line":3,"column":30,"nodeType":"333","messageId":"334","endLine":3,"endColumn":35},{"ruleId":"331","severity":1,"message":"359","line":3,"column":37,"nodeType":"333","messageId":"334","endLine":3,"endColumn":40},{"ruleId":"331","severity":1,"message":"371","line":3,"column":42,"nodeType":"333","messageId":"334","endLine":3,"endColumn":47},{"ruleId":"331","severity":1,"message":"352","line":3,"column":49,"nodeType":"333","messageId":"334","endLine":3,"endColumn":55},{"ruleId":"331","severity":1,"message":"350","line":3,"column":63,"nodeType":"333","messageId":"334","endLine":3,"endColumn":67},{"ruleId":"331","severity":1,"message":"372","line":20,"column":10,"nodeType":"333","messageId":"334","endLine":20,"endColumn":14},{"ruleId":"331","severity":1,"message":"373","line":21,"column":10,"nodeType":"333","messageId":"334","endLine":21,"endColumn":17},{"ruleId":"331","severity":1,"message":"374","line":154,"column":7,"nodeType":"333","messageId":"334","endLine":154,"endColumn":15},{"ruleId":"331","severity":1,"message":"344","line":1,"column":17,"nodeType":"333","messageId":"334","endLine":1,"endColumn":25},{"ruleId":"331","severity":1,"message":"375","line":3,"column":19,"nodeType":"333","messageId":"334","endLine":3,"endColumn":24},{"ruleId":"327","replacedBy":"376"},{"ruleId":"329","replacedBy":"377"},{"ruleId":"331","severity":1,"message":"344","line":1,"column":17,"nodeType":"333","messageId":"334","endLine":1,"endColumn":25},{"ruleId":"331","severity":1,"message":"352","line":2,"column":17,"nodeType":"333","messageId":"334","endLine":2,"endColumn":23},{"ruleId":"331","severity":1,"message":"344","line":1,"column":17,"nodeType":"333","messageId":"334","endLine":1,"endColumn":25},{"ruleId":"331","severity":1,"message":"344","line":1,"column":17,"nodeType":"333","messageId":"334","endLine":1,"endColumn":25},{"ruleId":"331","severity":1,"message":"375","line":4,"column":10,"nodeType":"333","messageId":"334","endLine":4,"endColumn":15},"no-native-reassign",["378"],"no-negated-in-lhs",["379"],"@typescript-eslint/no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'HtView' is defined but never used.","'htView' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'clusterData'. Either include it or remove the dependency array.","ArrayExpression",["380"],"'useEffect' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'useAsync' is defined but never used.","'apiGet' is defined but never used.",["378"],["379"],"'RouteComponentProps' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'Checkbox' is defined but never used.",["381"],"'logo' is defined but never used.","'matchPath' is defined but never used.","'Switch' is defined but never used.","'Radio' is defined but never used.","'Tag' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'ui_data' is assigned a value but never used.",["382"],"'Component' is defined but never used.",["383"],["384"],"'Data' is defined but never used.",["385"],"'Table' is defined but never used.","'Space' is defined but never used.","'user' is assigned a value but never used.","'project' is assigned a value but never used.","'NoteText' is assigned a value but never used.","'IUser' is defined but never used.",["378"],["379"],"no-global-assign","no-unsafe-negation",{"desc":"386","fix":"387"},{"desc":"386","fix":"388"},{"desc":"386","fix":"389"},{"desc":"386","fix":"390"},{"desc":"386","fix":"391"},{"desc":"386","fix":"392"},"Update the dependencies array to be: [clusterData]",{"range":"393","text":"394"},{"range":"395","text":"394"},{"range":"396","text":"394"},{"range":"397","text":"394"},{"range":"398","text":"394"},{"range":"399","text":"394"},[1761,1763],"[clusterData]",[1973,1975],[2103,2105],[1728,1730],[1740,1742],[651,653]]
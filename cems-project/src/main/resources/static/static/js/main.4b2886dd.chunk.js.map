{"version":3,"sources":["components/Navbar/NavbarBottom.tsx","assets/sun-energy.svg","components/Navbar/NavbarLogo.tsx","constant/routes.ts","components/Common/Icon.tsx","components/Navbar/NavbarMenu.tsx","components/Navbar/Navbar.tsx","constant/theme.ts","lib/api.ts","components/Card/Card.tsx","components/Table/SampleTable.tsx","components/Table/Table.tsx","pages/Dashboard/DashboardList.tsx","components/HtView/index.js","pages/Dashboard/DashboardMap.tsx","pages/Dashboard/Dashboard.tsx","containers/DashboardContainer.tsx","lib/apiUser.ts","pages/Login/LoginForm.tsx","pages/Login/Login.tsx","containers/LoginContainer.tsx","pages/Report/ReportList.tsx","components/Form/Report.tsx","components/Chart/LineChart.tsx","pages/Report/ReportTable.tsx","pages/Report/ReportDash.tsx","pages/Report/Report.tsx","containers/ReportContainer.tsx","components/Common/AddButton.tsx","redux/hooks.ts","lib/apiProject.ts","redux/projectSlice.ts","components/Form/Project.tsx","redux/userSlice.ts","components/Form/User.tsx","pages/Admin/AddModal/AddModal.tsx","pages/Admin/UserTable.tsx","pages/Admin/AdminTabs/User.tsx","pages/Admin/ProjectTable.tsx","pages/Admin/AdminTabs/Project.tsx","redux/sectionSlice.ts","pages/Admin/ModModal/ManageSectionTable.tsx","pages/Admin/ModModal/ManageSensorTable.tsx","pages/Admin/ModModal/SectionModal.tsx","pages/Admin/SectionTable.tsx","pages/Admin/AdminTabs/Section.tsx","pages/Admin/Admin.tsx","containers/AdminContainer.tsx","Routes/AuthenticateRoute.tsx","Layout/Layout.tsx","Layout/LayoutContainer.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx"],"names":["SwitchBlock","styled","div","AvatarImg","props","theme","iconUrl","UserText","NavbarBottom","changeTheme","style","width","marginTop","onChange","ProjectLogo","img","ProjectText","p","NavbarLogo","src","logo","ROUTES","name","icon","StyledSVGIcon","ReactSVG","iconColor","iconHover","size","css","transform","fill","Icon","stroke","hover","hoverfill","RouteWrapper","CustomButton","fontColor","NavbarMenu","onClick","console","log","match","routes","map","route","activeClassName","to","isAdmin","NavbarBlock","headerBg","NavbarSection","Navbar","isLogin","htValue","handleScene","LightTheme","clusterBg","siteListBg","siteCardBg","siteDivider","activeSite","circularBg","searchbarBg","searchbarFocusBg","searchbarDivider","radioBtnBg","radioBtnBorder","radioBtnText","radioBtnBgChecked","radioBtnTextChecked","siteFilterCheckedBorder","toggleBtnBg","toggleBtnIcon","openAllBtn","openAllBtnHover","closeAllBtn","closeAllBtnHover","DarkTheme","apiGet","url","params","axios","get","headers","Accept","CardBlock","FlexBlock","Card","data","loading","borderRadius","project","aplicationId","userId","regDate","coords","sms","num","note","active","columns","title","dataIndex","key","render","text","record","index","code","StWrapper","Table","handleClick","useState","value","setValue","onRow","rowIndex","event","handleRowClick","dataSource","pagination","pageSize","scroll","y","eventHandler","kind","mockVal","str","repeat","label","ClusterBlock","hexType","hex","trim","replace","rgb","length","forEach","x","arr","parseInt","join","hexToRgb","Title","DashboardList","scene","setLoading","options","setOptions","onSelect","result","onSearch","searchText","placeholder","HtView","state","dataSet","init","ht","Default","convertURL","type","autoInvalidate","dataModel","DataModel","graphView","graph","GraphView","graph3d","Graph3dView","view","getView","height","htView","current","appendChild","resizeEvent","invalidate","undefined","React","createRef","this","clear","list","item","found","getDataByTag","tag","a","invalidateShape3dCachedImage","ref","textAlign","Component","DashboardMap","useRef","updateDM","useEffect","getScene","pushdata","setScene","getGraphView","isHooked","clearDM","deserialize","json","panel","getDataModel","position","left","top","bottom","DashboardWrapper","MapDiv","Dashboard","handleGraphView","param","fetchClusterData","res","DashboardContainer","clusterData","useAsync","deferFn","initialValue","ui_data","run","baseURL","setupAxiosInterceptors","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","StyledLoginForm","LoginForm","handleLogin","errorMessage","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","onFinishFailed","errorInfo","autoComplete","Item","rules","required","message","Password","offset","htmlType","LoginWrapper","Login","LoginContainer","path","component","history","useHistory","isAuth","setErrorMessage","username","password","Object","post","then","response","setItem","registerSuccessfulLoginForJwt","push","ReportList","Option","Select","RangePicker","DatePicker","dummySelect","i","toString","PickerWithType","picker","StyledForm","CustomButtonGroup","FlexRow","ReportForm","Form","useForm","form","setType","disable","setCustomDecade","formRef","user","handleSelectChange","setFieldsValue","layout","section","sensorType","sensorName","decade","selectDecade","select_decade","_d","select_range","handleFormValue","mode","Group","e","target","format","disabled","LineChart","xField","yField","seriesField","yAxis","formatter","v","concat","s","color","point","shape","_ref","category","_ref2","year","r","Number","smooth","ReportTable","date","battery","rssi","snr","temp","sorter","b","slice","AssetWrapper","AssetBlock","ChartWrapper","TableWrapper","ReportDash","setList","dmArr","dummyEl","val","idx","Report","lineData","className","DownloadOutlined","ReportWrapper","dummy","ReportContainer","setData","asyncFetch","fetch","catch","ip","setIp","callback","method","withCredentials","ipGet","AddButon","handleForm","UserAddOutlined","ProjectOutlined","useAppDispatch","useDispatch","useAppSelector","useSelector","apiDeleteProjectById","id","getProjectList","createAsyncThunk","handleProjectList","scene_name","application_id","sms_number1","sms_number2","deleteProjectList","projectSlice","createSlice","initialState","visible","reducers","addProject","action","payload","updateProject","deleteProject","newProject","filter","openProject","setForm","extraReducers","builder","addCase","fulfilled","projectList","actions","TextArea","Input","ProjectForm","projectForm","dispatch","handleData","resetFields","display","marginBottom","margin","rows","getUserList","handleUserList","company_name","manager_name","contact_number","email","projectNameList","deleteUserList","user_id","userSlice","addUser","updateUser","deleteUser","newUser","openUser","userList","UserForm","userForm","totalProjectList","modVisible","totalProjectNameList","projects","defaultValue","AddModal","onCancel","footer","User","Project","NoteText","UserTable","handleModify","handleDelete","cancel","toUpperCase","onConfirm","success","confirm","okText","cancelText","danger","UserTab","fetchUser","userData","getData","TitleWrapper","AddButton","Contents","ProjectTable","ProjectTab","fetchProject","projectData","getList","projectName","asset","node_id","adc1_type","adc1_name","adc2_type","adc2_name","adc3_type","adc3_name","adc4_type","adc4_name","adcDiff12_type","adcDiff12_name","adcDiff34_type","adcDiff34_name","sectionList","section_name","node_list","sensorList","sensor_type","max_value","sectionSlice","addSection","updateSection","addSectionList","updateSectionList","updateSectionName","newItem","assign","updateNodeList","updateSensorValue","deleteSectionList","newSectionList","openSection","ButtonGroup","ButtonAdd","ManageSectionTable","handleAddRow","handleSave","sectionValue","inputRef","postValue","blur","SectionColumn","align","sendValue","handleInputChange","focus","onKeyPress","onBlur","currentTarget","rowKey","ManageSensorTable","sensorValue","newRecord","SectionModal","fetchSectionList","fetcgSensorList","sectionForm","newData","SectionTable","handleSensorData","fetchSection","setPjName","openInput","changeValue","obj","keyName","newValue","handleSelect","row","findIndex","calcVal","splice","handleInput","children","handleProject","bordered","SectionTab","ButtonWrapper","SaveOutlined","TabPane","Tabs","AdminWrapper","Admin","users","Content","Layout","padding","overflow","tab","AdminContainer","fetchUserList","fetchProjectList","AuthenticatedRoute","exact","GlobalStyle","createGlobalStyle","reset","setTheme","themes","light","dark","sessionStorage","graphValue","setHtValue","checked","LayoutContainer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","userReducer","projectReducer","sectionReducer","store","configureStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4b2886dd.chunk.js","sourcesContent":["import { Switch } from 'antd';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nfunction NavbarBottom({\r\n  changeTheme,\r\n}: {\r\n  changeTheme: (checked: boolean) => void\r\n}) {\r\n  return (\r\n    <>\r\n      <UserText>\r\n        <p>안녕하세요. 000님</p>\r\n      </UserText>\r\n      <AvatarImg />\r\n\r\n      <SwitchBlock>\r\n        <span>Theme</span>\r\n        <Switch\r\n          style={{ width: 48, marginTop: 5 }}\r\n          onChange={changeTheme}\r\n        />\r\n      </SwitchBlock>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nconst SwitchBlock = styled.div`\r\n    font-family: Roboto;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    font-size: 12px;\r\n    line-height: 13px;\r\n    text-align: center;\r\n    letter-spacing: 0.44px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-right:10px;\r\n    display:none;\r\n`;\r\nconst AvatarImg = styled.div`\r\n    width: 30px;\r\n    height: 30px;\r\n    cursor: pointer;\r\n    background: ${(props) => props.theme.iconUrl};\r\n    background-size: cover;\r\n`;\r\nconst UserText = styled.div`\r\n    display: flex;\r\n    \r\n    & p {\r\n      font-size: 14px;\r\n      margin-right: 10px;\r\n    }\r\n`;\r\nexport default NavbarBottom;\r\n","export default __webpack_public_path__ + \"static/media/sun-energy.621392c8.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport logo from '../../assets/sun-energy.svg';\r\n\r\nfunction NavbarLogo() {\r\n  return (\r\n    <>\r\n      <ProjectLogo src={logo} />\r\n      <ProjectText>CEMS</ProjectText>\r\n    </>\r\n  );\r\n}\r\n\r\nconst ProjectLogo = styled.img`\r\n    cursor: pointer;\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 100%;\r\n    background-color: #55b1ff;\r\n    padding: 10px;\r\n    margin-bottom: 5px;\r\n`;\r\nconst ProjectText = styled.p`\r\n    letter-spacing: 0.15px;\r\n    cursor: pointer;\r\n    font-size: 14px;\r\n    font-weight: 700;\r\n    margin-left: 10px;\r\n    font-family: 'Roboto';\r\n`;\r\n\r\nexport default NavbarLogo;\r\n","interface Routes {\r\n    name: string\r\n    icon: string\r\n}\r\nexport const ROUTES: Routes[] = [\r\n  {\r\n    name: 'dashboard',\r\n    icon: 'ic_nav1',\r\n  },\r\n  {\r\n    name: 'report',\r\n    icon: 'ic_nav3',\r\n  },\r\n];\r\n","import React from 'react';\r\nimport { ReactSVG } from 'react-svg';\r\nimport styled, { css } from 'styled-components';\r\n\r\ninterface IProps {\r\n  name: string\r\n  stroke?: string\r\n  size?: string\r\n  fill?: string\r\n  transform?: string\r\n  hover?: string\r\n  hoverfill?: string\r\n}\r\n\r\nfunction Icon({ name, stroke, size, transform, hover, fill, hoverfill }: IProps) {\r\n  return (\r\n    <StyledSVGIcon\r\n      src={`./icons/${name}.svg`}\r\n      stroke={stroke}\r\n      size={size}\r\n      transform={transform}\r\n      hover={hover}\r\n      fill={fill}\r\n      hoverfill={hoverfill}\r\n    />\r\n  );\r\n}\r\n\r\nconst StyledSVGIcon = styled(ReactSVG) <{\r\n  size?: string\r\n  transform?: string\r\n  stroke?: string\r\n  hover?: string\r\n  fill?: string\r\n  hoverfill?: string\r\n}>`\r\n    svg {\r\n        fill: transparent;\r\n\r\n        & path {\r\n            stroke: ${(props) => props.theme.iconColor};\r\n        }\r\n\r\n        &:hover {\r\n            path {\r\n                stroke: ${(props) => props.theme.iconHover};\r\n            }\r\n        }\r\n\r\n        ${({ size }) =>\r\n    size &&\r\n    css`\r\n                width: ${size};\r\n                height: ${size};\r\n            `}\r\n        ${({ transform }) =>\r\n    transform &&\r\n    css`\r\n                transform: ${transform};\r\n            `}\r\n    \r\n    path {\r\n\r\n            ${({ fill }) =>\r\n    fill &&\r\n    css`\r\n                    fill: ${fill};\r\n                `}\r\n        }\r\n    }\r\n`;\r\n\r\nexport default Icon;\r\n","import React from 'react';\r\nimport { ROUTES } from '../../constant/routes';\r\nimport styled from 'styled-components';\r\nimport Icon from '../Common/Icon';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction NavbarMenu(props: any) {\r\n  const onClick = () => {\r\n    console.log(props.match);\r\n  };\r\n  const routes = ROUTES.map((route) => {\r\n    return (\r\n      <CustomButton key={route.name}>\r\n        <NavLink\r\n          activeClassName=\"activated\"\r\n          to={`/${route.name}`}\r\n          onClick={onClick} >\r\n          <Icon name={route.icon} hover={'#f4f6f7'} />\r\n          <span>{route.name}</span>\r\n        </NavLink>\r\n      </CustomButton>\r\n    );\r\n  });\r\n  return (\r\n    <RouteWrapper>\r\n      {routes}\r\n      {(props.isAdmin === 'true') ?\r\n        <CustomButton key={'admin'}>\r\n          <NavLink\r\n            activeClassName=\"activated\"\r\n            to={'/admin'}\r\n            onClick={onClick} >\r\n            <Icon name={'ic_nav4'} hover={'#f4f6f7'} />\r\n            <span>admin</span>\r\n          </NavLink>\r\n        </CustomButton>\r\n        : null\r\n      }\r\n    </RouteWrapper>);\r\n}\r\nconst RouteWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\nconst CustomButton = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n\r\n  & a {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    color: ${(props) => props.theme.fontColor};\r\n  }\r\n\r\n  & a.activated {\r\n    color: #ffbb28;\r\n\r\n    & svg path {\r\n      stroke: #ffbb28;\r\n    }\r\n  }\r\n\r\n  &::after {\r\n    margin-left: 10px;\r\n    content: '|';\r\n  }\r\n\r\n  &:last-child {\r\n    & svg path {\r\n      stroke-width: 1.5px;\r\n    }\r\n  }\r\n\r\n  &:last-child::after {\r\n    margin-left: 10px;\r\n    content: '';\r\n  }\r\n`;\r\nexport default NavbarMenu;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport NavbarBottom from './NavbarBottom';\r\nimport NavbarLogo from './NavbarLogo';\r\nimport NavbarMenu from './NavbarMenu';\r\n\r\nfunction Navbar(props: any) {\r\n\r\n  return (\r\n    <NavbarBlock>\r\n      <NavbarSection>\r\n        <NavbarLogo />\r\n      </NavbarSection>\r\n      <NavbarSection>\r\n        {(props.isLogin === 'true') ? <NavbarMenu htValue={props.htValue} handleScene={props.handleScene} {...props} /> : null}\r\n      </NavbarSection>\r\n      <NavbarSection>\r\n        <NavbarBottom changeTheme={props.changeTheme} />\r\n      </NavbarSection>\r\n    </NavbarBlock>\r\n  );\r\n}\r\n\r\nconst NavbarBlock = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    \r\n    height: 60px;\r\n    background-color: ${(props) => props.theme.headerBg};\r\n    color: ${(props) => props.theme.fontColor};\r\n    border-bottom: 1px solid #eaeaea;\r\n    box-sizing: border-box;\r\n    z-index: 3;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 16px 12px;\r\n\r\n`;\r\nconst NavbarSection = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport default Navbar;\r\n","export const LightTheme = {\r\n  clusterBg: '#fefefe',\r\n  siteListBg: 'white',\r\n  siteCardBg: '#f0f5ff',\r\n  headerBg: '#fcfcfc',\r\n\r\n  siteDivider: 'rgba(0,0,0,0.1)',\r\n  activeSite: '#55B1FF',\r\n  circularBg: 'white',\r\n  fontColor: '#333',\r\n\r\n  searchbarBg: '#f2f2f2',\r\n  searchbarFocusBg: 'white',\r\n  searchbarDivider: '#e5e5e5',\r\n\r\n  radioBtnBg: 'white',\r\n  radioBtnBorder: '#9c9c9c',\r\n  radioBtnText: '#0e3aad',\r\n\r\n  radioBtnBgChecked: '#007aff',\r\n  radioBtnTextChecked: 'white',\r\n  siteFilterCheckedBorder: '#9c9c9c',\r\n\r\n  toggleBtnBg: 'white',\r\n  toggleBtnIcon: '#C2C9D1',\r\n\r\n  openAllBtn: 'url(/icons/ic_add_rounded.svg) no-repeat;',\r\n  openAllBtnHover: 'url(/icons/ic_add_rounded_hover.svg) no-repeat;',\r\n\r\n  closeAllBtn: 'url(/icons/ic_minus.svg) no-repeat;',\r\n  closeAllBtnHover: 'url(/icons/ic_minus_hover.svg) no-repeat;',\r\n\r\n  iconColor: '#007aff',\r\n  iconHover: '#0e3aad',\r\n  iconUrl: 'url(/icons/ic_close_all_dark_hover.svg) no-repeat;'\r\n};\r\nexport const DarkTheme = {\r\n  clusterBg: '#06102A',\r\n  headerBg: '#0D1B3F',\r\n  siteListBg: '#0D1B3F',\r\n  siteCardBg: 'rgba(255,255,255,0.1)',\r\n  activeSite: 'white',\r\n\r\n  siteDivider: 'rgba(255,255,255,0.1)',\r\n  circularBg: '#06102A',\r\n  fontColor: 'white',\r\n\r\n  searchbarBg: '#253252',\r\n  searchbarFocusBg: '#06102A',\r\n  searchbarDivider: '#222A41',\r\n\r\n  radioBtnBg: '#253252',\r\n  radioBtnBorder: '#253252',\r\n  radioBtnText: 'white',\r\n\r\n  radioBtnTextChecked: '#55B1FF',\r\n  radioBtnBgChecked: 'transparent',\r\n  siteFilterCheckedBorder: '#55B1FF',\r\n\r\n  toggleBtnBg: '#55B1FF',\r\n  toggleBtnIcon: 'white',\r\n\r\n  openAllBtn: 'url(/icons/ic_add_dark.svg) no-repeat;',\r\n  openAllBtnHover: 'url(/icons/ic_add_dark_hover.svg) no-repeat;',\r\n\r\n  closeAllBtn: 'url(/icons/ic_close_all_dark.svg) no-repeat;',\r\n  closeAllBtnHover: 'url(/icons/ic_close_all_dark_hover.svg) no-repeat;',\r\n\r\n  iconColor: 'white',\r\n  iconHover: '#9c9c9c',\r\n  iconUrl: 'url(./icons/ic_close_all_dark_hover.svg) no-repeat;'\r\n};","import axios from 'axios';\r\n\r\nconst baseURL = 'http://localhost:8080/api';\r\n\r\nexport const apiGet = <P>({ url, params }: { url: string; params?: P }) => {\r\n  return axios.get(url, {\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json;charset=UTF-8',\r\n    },\r\n    params,\r\n  });\r\n};\r\n\r\nexport const ipGet = (url:string, callback:any) => {\r\n  axios(\r\n    {\r\n      url: '/api' + url,\r\n      method: 'post',\r\n\r\n      /**\r\n       * 개발 환경에서의 크로스 도메인 이슈를 해결하기 위한 코드로\r\n       * 운영 환경에 배포할 경우에는 15~16행을 주석 처리합니다.\r\n       * \r\n       * ※크로스 도메인 이슈: 브라우저에서 다른 도메인으로 URL 요청을 하는 경우 나타나는 보안문제\r\n       */\r\n      baseURL: 'http://localhost:8080',\r\n      withCredentials: true,\r\n    }\r\n  ).then(function (response) {\r\n    callback(response.data);\r\n  });\r\n};","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Skeleton, Card as CardFrame } from 'antd';\r\nimport styled from 'styled-components';\r\nimport { Data } from '../../constant/Dashboard';\r\n\r\nconst Card = ({ data, loading }: { data: Data, loading: boolean }) => {\r\n  return (\r\n    <CardBlock>\r\n      <CardFrame loading={loading} style={{ borderRadius: '10px' }}>\r\n        <p>\r\n          <span><label>프로젝트명</label>{data.project}</span>\r\n          <span><label>Aplication ID</label>{data.aplicationId}</span>\r\n        </p>\r\n        <p><span><label>사용자 ID</label> {data.userId}</span></p>\r\n        <p><span><label>생성일</label>{data.regDate}</span></p>\r\n        <FlexBlock>\r\n          <p><label>위치</label><p>위도:{data.coords[0]}</p><p>경도:{data.coords[1]}</p></p>\r\n          <p><label>SMS 번호</label>{data.sms ? data.sms.map((num) => <p key={num}>{num}</p>) : null}</p>\r\n        </FlexBlock>\r\n\r\n        <p><label>note</label><span>{data.note}</span></p>\r\n        <Skeleton loading={loading} active />\r\n      </CardFrame>\r\n    </CardBlock >\r\n  );\r\n};\r\nconst CardBlock = styled.div`\r\n    color: ${(props) => props.theme.fontColor};\r\n\r\n    & .ant-card {\r\n      border-radius: 10px;\r\n      border-color:${(props) => props.theme.clusterBg};\r\n      background-color: ${(props) => props.theme.clusterBg};\r\n    }\r\n    & .ant-card-body {\r\n      padding: 10px;\r\n      color: ${(props) => props.theme.fontColor};\r\n\r\n      & p {\r\n        margin-bottom: 8px;\r\n        padding: 0 8px;\r\n        font-size: 14px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n        align-items: flex-start;\r\n        & span {\r\n          display: flex;\r\n          width: 100%;\r\n          flex-direction: row;\r\n          justify-content: space-between;\r\n        }\r\n        & label {\r\n          font-size: 18px;\r\n          font-weight: bold;\r\n          color: ${(props) => props.theme.iconColor};\r\n          margin-bottom: 5px;\r\n        }\r\n      }\r\n    }\r\n\r\n`;\r\nconst FlexBlock = styled.div`\r\n  display: inline-flex;\r\n  border-top: 1px solid #eeeeee;\r\n  padding-top: 10px;\r\n`;\r\n\r\nexport default Card;","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Space } from 'antd';\r\n\r\nexport const columns = [\r\n  {\r\n    title: 'Project',\r\n    dataIndex: 'project',\r\n    key: 'project',\r\n    render: (text: string) => (<button>{text}</button>),\r\n  },\r\n  {\r\n    title: 'Code',\r\n    key: 'code',\r\n    render: (text: string, record: any, index: number) => (\r\n      <Space size=\"middle\">\r\n        <button>{record.code}</button>\r\n      </Space>\r\n    ),\r\n  },\r\n];\r\n\r\nexport const data = [\r\n  {\r\n    key: '1',\r\n    project: 'project_10',\r\n    code: ['108850'],\r\n  },\r\n  {\r\n    key: '2',\r\n    project: 'project_68',\r\n    code: ['684550'],\r\n  },\r\n  {\r\n    key: '3',\r\n    project: 'project_19',\r\n    code: ['198778'],\r\n  },\r\n  {\r\n    key: '4',\r\n    project: 'project_19',\r\n    code: ['198778'],\r\n  },\r\n  {\r\n    key: '5',\r\n    project: 'project_19',\r\n    code: ['198778'],\r\n  },\r\n  {\r\n    key: '6',\r\n    project: 'project_19',\r\n    code: ['198778'],\r\n  },\r\n];\r\n","import React, { useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table as AtTable } from 'antd';\r\nimport styled from 'styled-components';\r\n// 샘플 테이블 데이터\r\nimport { columns, data } from '../../components/Table/SampleTable';\r\n\r\ninterface IProps {\r\n  data?: object[];\r\n  columns?: object[];\r\n  handleClick?: Function;\r\n}\r\n\r\nconst Table = ({ handleClick }: IProps) => {\r\n  const [value, setValue] = useState({});\r\n  const handleRowClick = (record: object) => {\r\n    setValue(record);\r\n  };\r\n\r\n  console.log(value);\r\n  return (\r\n    <StWrapper>\r\n      <AtTable\r\n        size=\"small\"\r\n        onRow={(record, rowIndex) => {\r\n          return {\r\n            onClick: event => { handleRowClick(record); }, // click row\r\n          };\r\n        }}\r\n        columns={columns} dataSource={data} pagination={{ pageSize: 10 }} scroll={{ y: 180 }} />\r\n    </StWrapper>\r\n  );\r\n};\r\n\r\nconst StWrapper = styled.div`\r\n  min-height: 280px;\r\n  overflow: auto;\r\n\r\n  & .ant-table-wrapper {\r\n    max-height: 100%;\r\n  }\r\n`;\r\n\r\nexport default Table;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Card from '../../components/Card/Card';\r\nimport { AutoComplete, Divider } from 'antd';\r\nimport Table from '../../components/Table/Table';\r\nimport { dashboardList } from './Interface';\r\n\r\ntype optionType = {\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\nconst hexToRgb = (hexType: string) => {\r\n  const hex = hexType.trim().replace('#', '');\r\n  const rgb = (3 === hex.length) ?\r\n    hex.match(/[a-f\\d]/gi) : hex.match(/[a-f\\d]{2}/gi);\r\n  if (rgb) {\r\n    rgb.forEach(function (str, x, arr: any[]) {\r\n      if (str.length === 1) str = str + str;\r\n      arr[x] = parseInt(str, 16);\r\n    });\r\n    return 'rgba(' + rgb.join(', ') + ', 0.9 )';\r\n  }\r\n};\r\n\r\nconst eventHandler = (event: any) => {\r\n  if (event.kind === 'clickData') {\r\n    console.log(event);\r\n  }\r\n};\r\n\r\nconst mockVal = (str: string | never, repeat: number = 1): optionType => ({\r\n  value: str.repeat(repeat), // 실제 데이터 들어가야함.\r\n  label: str\r\n});\r\n\r\nfunction DashboardList({ data, htValue, scene }: dashboardList) {\r\n  const [value, setValue] = useState('');\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [options, setOptions] = useState([{ value: '' }]);\r\n  const onSearch = (searchText: string | never) => {\r\n    // 서치텍스트를 api로 호출해서 해당 결과에 대한 결과 배열을 가지고 와야함.\r\n    setOptions(\r\n      searchText ? [mockVal(searchText)] : [],\r\n    );\r\n  };\r\n  const onSelect = (result: string) => {\r\n    console.log('onSelect', result);\r\n    setLoading(false);\r\n  };\r\n  const onChange = (result: string) => {\r\n    setValue(result);\r\n    (result.length > 0) ? setLoading(false) : setLoading(true);\r\n  };\r\n  if (data) {\r\n    return (<ClusterBlock>\r\n      <Title>프로젝트 리스트</Title>\r\n      <AutoComplete\r\n        value={value}\r\n        options={options}\r\n        style={{\r\n          width: '100%',\r\n        }}\r\n        onSelect={onSelect}\r\n        onSearch={onSearch}\r\n        onChange={onChange}\r\n        placeholder=\"프로젝트 명 또는 ID 검색\"\r\n      />\r\n      <Divider />\r\n      <Table handleClick={eventHandler} />\r\n      <Card data={data} loading={loading} />\r\n    </ClusterBlock>);\r\n  }\r\n  return <ClusterBlock />;\r\n}\r\n\r\nconst ClusterBlock = styled.div`\r\n    position: absolute;\r\n    top: 60px;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 320px;\r\n    height: auto;\r\n    background-color: ${(props) => hexToRgb(props.theme.clusterBg)};\r\n    color: ${(props) => props.theme.fontColor};\r\n    z-index: 2;\r\n    padding: 20px;\r\n    font-size: 17px;\r\n    border-radius: 20px;\r\n    z-index: 3;\r\n    margin: 10px;\r\n    transition: all 0.3s ease-in-out;\r\n    overflow-y: auto;\r\n    box-sizing: border-box;\r\n`;\r\nconst Title = styled.div`\r\n  font-size: 1.5em;\r\n  font-family: 'NanumSquare';\r\n  text-transform: capitalize;\r\n  color: ${(props) => props.theme.fontColor};\r\n  padding: 1em 0;\r\n`;\r\n\r\nexport default DashboardList;\r\n","import React from 'react';\r\nimport resizeEvent from 'element-resize-event';\r\n\r\nexport default class HtView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.type = undefined;\r\n    this.dataModel = undefined;\r\n    this.graphView = undefined;\r\n    this.scene = undefined;\r\n    this.htView = React.createRef();\r\n  }\r\n  state = {\r\n    data: this.props.dataSet,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.init();\r\n  }\r\n  getDataModel() {\r\n    return this.dataModel;\r\n  }\r\n  getGraphView() {\r\n    return this.graphView;\r\n  }\r\n  setScene(scene) {\r\n    this.scene = scene;\r\n  }\r\n  getScene(scene) {\r\n    return this.scene;\r\n  }\r\n  clearDM() {\r\n    this.dataModel.clear();\r\n  }\r\n  updateDM(list) {\r\n    list.forEach((item) => {\r\n      const found = this.dataModel.getDataByTag(item.tag);\r\n      if (found) {\r\n        found.a('data', item.data);\r\n        this.graphView.invalidateShape3dCachedImage(found);\r\n      }\r\n    });\r\n  }\r\n  init = () => {\r\n    ht.Default.convertURL = (url) => {\r\n      return './ht-static/' + url;\r\n    };\r\n    const type = this.props['type'] || '2d';\r\n    this.type = type;\r\n    const autoInvalidate = this.props.autoInvalidate;\r\n    /* global ht */\r\n    this.dataModel = new ht.DataModel();\r\n    if (type === '2d') {\r\n      this.graphView = new ht.graph.GraphView(this.dataModel);\r\n    } else {\r\n      this.graphView = new ht.graph3d.Graph3dView(this.dataModel);\r\n    }\r\n    // this.dataModel.enableAnimation();\r\n    // this.graphView.enableDashFlow();\r\n    const view = this.graphView.getView();\r\n    view.style.width = '100%';\r\n    view.style.height = '100%';\r\n    this.htView.current.appendChild(view);\r\n    resizeEvent(this.htView.current, () => {\r\n      autoInvalidate && this.graphView.invalidate();\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        ref={this.htView}\r\n        style={{ textAlign: 'left', ...this.props.style }}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport HtView from '../../components/HtView';\r\n\r\nfunction DashboardMap(props: any) {\r\n  const htView = useRef<any>();\r\n  const render = () => {\r\n    const scene = htView.current.getScene();\r\n    if (scene === props.scene) {\r\n      if (props.pushdata) {\r\n        updateDM(props.pushdata);\r\n      }\r\n    } else {\r\n      htView.current.setScene(props.scene);\r\n      const graphView = htView.current.getGraphView();\r\n      props.getGraphView(graphView);\r\n      graphView.isHooked = undefined;\r\n      htView.current.clearDM();\r\n      graphView.deserialize(props.scene, (json: any) => {\r\n        const dataModel = htView.current.getDataModel();\r\n        const panel = dataModel.getDataByTag('dataPanel1');\r\n        if (panel) {\r\n          panel.a('data', [10, 20, 30, 40, 50, 60, 70, 80, 90]);\r\n          graphView.invalidateShape3dCachedImage(panel);\r\n          console.log(panel);\r\n        }\r\n      });\r\n    }\r\n  };\r\n  const updateDM = (data: any) => {\r\n    //htView component api 사용\r\n    //pullData 가 채워 졌을시 call updateDM()\r\n    htView.current.updateDM(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    render();\r\n  });\r\n\r\n\r\n  return (\r\n    <>\r\n      <HtView ref={htView} type=\"3d\" autoInvalidate style={{ position: 'absolute', left: 0, top: 0, bottom: 0, width: '100%', height: '100%' }} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DashboardMap;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport DashboardList from './DashboardList';\r\nimport DashboardMap from './DashboardMap';\r\nimport { defaultType } from './Interface';\r\n\r\nfunction Dashboard({ data, pushdata, htValue, handleGraphView, scene, }: defaultType, props: any) {\r\n  const getGraphView = (param: any) => {\r\n    handleGraphView(param);\r\n  };\r\n  return (\r\n    <DashboardWrapper>\r\n      <DashboardList data={data} />\r\n      <MapDiv>\r\n        <DashboardMap pushdata={pushdata} getGraphView={getGraphView} scene={scene} />\r\n      </MapDiv>\r\n    </DashboardWrapper>\r\n  );\r\n}\r\nconst DashboardWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\nconst MapDiv = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    left: 0px;\r\n    top: 0px;\r\n    bottom: 0px;\r\n`;\r\nexport default Dashboard;\r\n","/* eslint-disable camelcase */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useAsync } from 'react-async';\r\nimport { apiGet, ipGet } from '../lib/api';\r\nimport Dashboard from '../pages/Dashboard/Dashboard';\r\nimport { Data } from '../constant/Dashboard';\r\nimport { setPriority } from 'os';\r\n\r\n\r\nconst fetchClusterData = async () => {\r\n  const res = await apiGet({\r\n    url: 'https://gorest.co.in/public-api/comments',\r\n  });\r\n  return res.data;\r\n};\r\nconst URL = 'ws://localhost:5000';\r\n\r\n// 더미데이터\r\nconst data: Data =\r\n{\r\n  project: 'PJ_0917',\r\n  aplicationId: '11',\r\n  coords: ['10.15151', '10.15151'],\r\n  regDate: '2021-08-30',\r\n  userId: 'sma_01',\r\n  sms: ['010-666-6666', '010-555-5555'],\r\n  note: 'sample demo'\r\n};\r\n\r\nfunction DashboardContainer(props: any) {\r\n  const clusterData = useAsync({\r\n    deferFn: fetchClusterData,\r\n    initialValue: [],\r\n  });\r\n  const [ui_data, setUi_data] = useState<Data[]>([]);\r\n  useEffect(() => {\r\n    clusterData.run();\r\n  }, []);\r\n  return (\r\n    <Dashboard\r\n      data={data}\r\n      pushdata={[{ 'tag': 'dataPanel1', 'data': ui_data }]}\r\n      htValue={props.htValue}\r\n      handleGraphView={props.handleGraphView}\r\n      scene={props.scene}\r\n    />\r\n  );\r\n}\r\n\r\nexport default DashboardContainer;\r\n","import axios from 'axios';\n\nconst baseURL = 'http://localhost:8080/api';\n\n// @route   POST /api/authenticate\n// @desc    사용자 로그인 시 아이디와 비밀번호를 확인한다.\n// @access  public\nexport const apiLogin = (username:string, password:string) => {\n  return axios.post(baseURL + '/authenticate', {\n    username,\n    password\n  });\n};\n\n// @route   \n// @desc    로그인 후 필요한 정보들을 세션에 저장한다.\n// @access  \nexport const registerSuccessfulLoginForJwt = (token:string, username:string) => {\n  localStorage.setItem('token', token);\n  localStorage.setItem('username', username);\n  localStorage.setItem('isAuthorized', 'true');\n};\n\n// @route   \n// @desc    api 전송 시 토큰 정보를 헤더에 붙여서 함께 전송한다.\n// @access  \nexport const setupAxiosInterceptors = () =>{\n  axios.interceptors.request.use(\n    (config) => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        config.headers['Authorization'] = 'Bearer ' + token;\n      }\n      return config;\n    },\n    (error) => {\n      Promise.reject(error);\n    }\n  );\n};\n\n// @route   POST /api/getUsers\n// @desc    전체 사용자를 조회한다.\n// @access  private\nexport const apiGetUsers = () => {\n  return axios.get(baseURL + '/getUsers');\n};\n\n// @route   POST /api/addOrUpdateUser\n// @desc    사용자를 추가/수정한다.\n// @access  private\nexport const apiAddOrUpdateUser = (user : any) => {\n  //   console.log('====== apiAddOrUpdateUser user ', user);\n\n  return axios.post(baseURL + '/addOrUpdateUser', {\n    id: user.id,\n    username: user.username,\n    password: user.password,\n    company_name: user.company_name,\n    manager_name: user.manager_name,\n    contact_number: user.contact_number,\n    email: user.email,\n    note: user.note,\n    projectNameList: user.projectNameList\n  });\n};\n\n// @route   GET /api/deleteUserById\n// @desc    id로 사용자를 삭제한다.\n// @access  private\nexport const apiDeleteUserById = (user_id : any) => {    \n  return axios.get(baseURL + '/deleteUserById', {\n    params: {\n      user_id: user_id\n    }\n  });\n};","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Form, Input, Button, Alert } from 'antd';\r\n\r\nconst LoginForm = ({ handleLogin, errorMessage }: any) => {\r\n  //const { handleLogin } = props;\r\n  const onFinish = (values: any) => {\r\n    console.log('Success:', values);\r\n    handleLogin(values);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return (\r\n    <StyledLoginForm>\r\n      <Form\r\n        name=\"basic\"\r\n        labelCol={{ span: 8 }}\r\n        wrapperCol={{ span: 16 }}\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.Item\r\n          label=\"ID\"\r\n          name=\"username\"\r\n          rules={[{ required: true, message: 'Please input your ID!' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          rules={[{ required: true, message: 'Please input your password!' }]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        {errorMessage !== '' &&\r\n        <div>\r\n          <Alert message={errorMessage} type=\"error\" />\r\n          <br/>\r\n        </div>\r\n        }        \r\n\r\n        {/* <Form.Item name=\"remember\" valuePropName=\"checked\" wrapperCol={{ offset: 8, span: 16 }}>\r\n          <Checkbox>Remember me</Checkbox>\r\n        </Form.Item> */}\r\n\r\n        <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\r\n          <CustomButton>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Login\r\n            </Button>\r\n          </CustomButton>\r\n        </Form.Item>\r\n      </Form>\r\n    </StyledLoginForm>\r\n  );\r\n};\r\n\r\nconst StyledLoginForm = styled.div`\r\n  padding: 20px;\r\n  width: 330px;\r\n  background-color: ${(props) => props.theme.clusterBg};\r\n  border-radius: 15px;\r\n  & label {\r\n    color: ${(props) => props.theme.fontColor};\r\n  }\r\n`;\r\n\r\nconst CustomButton = styled.div`\r\n  text-align: center;\r\n  & button {\r\n    width:100%;\r\n  }\r\n`;\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport LoginForm from './LoginForm';\r\n\r\nfunction Login(props: any) {\r\n  return (\r\n    <LoginWrapper>\r\n      <LoginForm {...props} />\r\n    </LoginWrapper>\r\n  );\r\n}\r\nconst LoginWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nexport default Login;\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useAsync } from 'react-async';\r\nimport { apiGet } from '../lib/api';\r\nimport { apiLogin, registerSuccessfulLoginForJwt } from '../lib/apiUser';\r\nimport Login from '../pages/Login/Login';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst fetchClusterData = async () => {\r\n  const res = await apiGet({\r\n    url: 'https://gorest.co.in/public-api/comments',\r\n  });\r\n  return res.data;\r\n};\r\n\r\nfunction LoginContainer({ path, isLogin, component }: any) {\r\n  const clusterData = useAsync({\r\n    deferFn: fetchClusterData,\r\n    initialValue: [],\r\n  });\r\n\r\n  const history = useHistory();\r\n  const [isAuth, setAuth] = useState<string>('false');\r\n  const [errorMessage, setErrorMessage] = useState<string>('');\r\n\r\n  // Initialize Websocket\r\n  //const wsClient = new WebSocket(URL, ['Token', \"token_body_here\"])\r\n  const handleLogin = (value: object): void => {\r\n    // console.log('object ' , value);\r\n    // console.log('username ', Object(value)[\"username\"]);\r\n\r\n    apiLogin(Object(value)['username'], Object(value)['password'])\r\n      .then((response) => {\r\n        console.log(response);\r\n\r\n        if (response.data === 'error') {\r\n          setErrorMessage('로그인 정보를 확인해주세요!');\r\n        } else {\r\n          // sessionStorage.setItem('token', response.data.token);\r\n          // sessionStorage.setItem('username', response.data.name);\r\n          // sessionStorage.setItem('isAuthorized', 'true');\r\n\r\n          registerSuccessfulLoginForJwt(response.data.token, response.data.name);\r\n          history.push('/dashboard');\r\n        }\r\n      });\r\n  };\r\n  console.log(isAuth);\r\n  useEffect(() => {\r\n    clusterData.run();\r\n  }, []);\r\n  return <Login handleLogin={handleLogin} errorMessage={errorMessage} />;\r\n}\r\n\r\nexport default LoginContainer;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Card from '../../components/Card/Card';\r\nimport { AutoComplete, Divider } from 'antd';\r\nimport Table from '../../components/Table/Table';\r\nimport { reportList } from './Interface';\r\n\r\ntype optionType = {\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\nconst hexToRgb = (hexType: string) => {\r\n  const hex = hexType.trim().replace('#', '');\r\n  const rgb = (3 === hex.length) ?\r\n    hex.match(/[a-f\\d]/gi) : hex.match(/[a-f\\d]{2}/gi);\r\n  if (rgb) {\r\n    rgb.forEach(function (str, x, arr: any[]) {\r\n      if (str.length === 1) str = str + str;\r\n      arr[x] = parseInt(str, 16);\r\n    });\r\n    return 'rgba(' + rgb.join(', ') + ', 0.9 )';\r\n  }\r\n};\r\n\r\nconst eventHandler = (event: any) => {\r\n  if (event.kind === 'clickData') {\r\n    console.log(event);\r\n  }\r\n};\r\n\r\nconst mockVal = (str: string | never, repeat: number = 1): optionType => ({\r\n  value: str.repeat(repeat), // 실제 데이터 들어가야함.\r\n  label: str\r\n});\r\n\r\nfunction ReportList(props: reportList) {\r\n  const { data } = props;\r\n  const [value, setValue] = useState('');\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [options, setOptions] = useState([{ value: '' }]);\r\n  const onSearch = (searchText: string | never) => {\r\n    // 서치텍스트를 api로 호출해서 해당 결과에 대한 결과 배열을 가지고 와야함.\r\n    setOptions(\r\n      searchText ? [mockVal(searchText)] : [],\r\n    );\r\n  };\r\n  const onSelect = (result: string) => {\r\n    console.log('onSelect', result);\r\n    setLoading(false);\r\n  };\r\n  const onChange = (result: string) => {\r\n    setValue(result);\r\n    (result.length > 0) ? setLoading(false) : setLoading(true);\r\n  };\r\n  if (data) {\r\n    return (<ClusterBlock>\r\n      <Title>프로젝트 리스트</Title>\r\n      <AutoComplete\r\n        value={value}\r\n        options={options}\r\n        style={{\r\n          width: '100%',\r\n        }}\r\n        onSelect={onSelect}\r\n        onSearch={onSearch}\r\n        onChange={onChange}\r\n        placeholder=\"프로젝트 명 또는 ID 검색\"\r\n      />\r\n      <Divider />\r\n      <Table handleClick={eventHandler} />\r\n      <Card data={data} loading={loading} />\r\n    </ClusterBlock>);\r\n  }\r\n  return <ClusterBlock />;\r\n}\r\n\r\nconst ClusterBlock = styled.div`\r\n    position: absolute;\r\n    top: 60px;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 320px;\r\n    height: auto;\r\n    background-color: ${(props) => hexToRgb(props.theme.clusterBg)};\r\n    color: ${(props) => props.theme.fontColor};\r\n    z-index: 2;\r\n    padding: 20px;\r\n    font-size: 17px;\r\n    border-radius: 20px;\r\n    z-index: 3;\r\n    margin: 10px;\r\n    transition: all 0.3s ease-in-out;\r\n    overflow-y: auto;\r\n    box-sizing: border-box;\r\n`;\r\nconst Title = styled.div`\r\n  font-size: 1.5em;\r\n  font-family: 'NanumSquare';\r\n  text-transform: capitalize;\r\n  color: ${(props) => props.theme.fontColor};\r\n  padding: 1em 0;\r\n`;\r\n\r\nexport default ReportList;\r\n","/* eslint-disable indent */\r\nimport React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Form, Button, Select, Radio, DatePicker } from 'antd';\r\n\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst dummySelect: any[] = [];\r\nfor (let i = 10; i < 36; i++) {\r\n  dummySelect.push(<Option key={i.toString(36) + i} value={`PJ_${i}`} >{i.toString(36) + i}</Option>);\r\n}\r\n\r\nfunction PickerWithType({ type, onChange }: any) {\r\n  if (type === 'date') return <DatePicker picker=\"date\" onChange={onChange} />;\r\n  if (type === 'month') return <DatePicker picker=\"month\" onChange={onChange} />;\r\n  if (type === 'year') return <DatePicker picker=\"year\" onChange={onChange} />;\r\n  return <DatePicker picker={type} onChange={onChange} />;\r\n}\r\n\r\nconst ReportForm = (props: any) => {\r\n  const [form] = Form.useForm();\r\n  const [type, setType] = useState('date');\r\n  const [disable, setCustomDecade] = useState(true);\r\n  const { formRef, user } = props;\r\n  const onFinish = (values: any) => {\r\n    const data = {\r\n      section: values.section,\r\n      sensorType: values.sensorType,\r\n      sensorName: values.sensorName,\r\n      decade: values.decade,\r\n      selectDecade: disable ? values.select_decade._d : [values.select_range[0]._d, values.select_range[1]._d]\r\n    };\r\n    props.handleFormValue(data);\r\n  };\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  const handleSelectChange = (value: any) => {\r\n    console.log(`Selected: ${value}`);\r\n  };\r\n  const toggleDecade = () => {\r\n    setCustomDecade(!disable);\r\n  };\r\n  useEffect(() => {\r\n    form.setFieldsValue(user);\r\n  }, [form, user]);\r\n  return (\r\n    <StyledForm>\r\n      <Form\r\n        ref={formRef}\r\n        form={form}\r\n        layout={'inline'}\r\n        name=\"user\"\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete=\"off\"\r\n      >\r\n        <FlexRow>\r\n          <Form.Item\r\n            label={'공사구간'}\r\n            name=\"section\"\r\n          >\r\n            <Select\r\n              mode=\"multiple\"\r\n              size={'middle'}\r\n              placeholder=\"Please select\"\r\n              onChange={handleSelectChange}\r\n              style={{ width: '200px' }}\r\n            >\r\n              {dummySelect}\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={'센서종류'}\r\n            name=\"sensorType\"\r\n          >\r\n            <Select\r\n              mode=\"multiple\"\r\n              size={'middle'}\r\n              placeholder=\"Please select\"\r\n              onChange={handleSelectChange}\r\n              style={{ width: '200px' }}\r\n\r\n            >\r\n              {dummySelect}\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={'센서명'}\r\n            name=\"sensorName\"\r\n          >\r\n            <Select\r\n              mode=\"multiple\"\r\n              size={'middle'}\r\n              placeholder=\"Please select\"\r\n              onChange={handleSelectChange}\r\n              style={{ width: '200px' }}\r\n            >\r\n              {dummySelect}\r\n            </Select>\r\n          </Form.Item>\r\n        </FlexRow>\r\n        <FlexRow>\r\n          <Form.Item\r\n            label={'조회조건'}\r\n            name=\"decade\"\r\n          >\r\n            <Radio.Group value={type} onChange={(e) => setType(e.target.value)}>\r\n              <Radio value=\"date\">일별</Radio>\r\n              <Radio value=\"week\">주별</Radio>\r\n              <Radio value=\"month\">월별</Radio>\r\n              <Radio value=\"year\">년별</Radio>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={'기간'}\r\n            name=\"select_decade\"\r\n          >\r\n            <PickerWithType type={type} onChange={(value: any) => console.log(value)} />\r\n          </Form.Item>\r\n\r\n          <Button type=\"primary\" onClick={toggleDecade}>직접 선택</Button>\r\n          <Form.Item\r\n            name=\"select_range\"\r\n          >\r\n            <RangePicker style={{ width: 300 }} format={'YYYY/MM/DD'} disabled={disable} />\r\n          </Form.Item>\r\n\r\n          <CustomButtonGroup>\r\n            <CustomButton>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                조회\r\n              </Button>\r\n            </CustomButton>\r\n          </CustomButtonGroup>\r\n        </FlexRow>\r\n      </Form>\r\n    </StyledForm >\r\n  );\r\n};\r\n\r\nconst StyledForm = styled.div`\r\n  padding: 10px;\r\n  margin: .4rem 0;\r\n  width: 100%;\r\n  background-color: #eaeaea;\r\n  border-radius: 15px;\r\n  & .ant-form-item-label label {\r\n    color: ${(props) => props.theme.fontColor};\r\n    width: 80px;\r\n    justify-content: flex-end;\r\n  }\r\n`;\r\nconst CustomButtonGroup = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  width: 250px;\r\n`;\r\n\r\nconst CustomButton = styled.div`\r\n  width: 70px;\r\n  & button {\r\n    width:100%;\r\n  }\r\n`;\r\nconst FlexRow = styled.div`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  margin: .3rem;\r\n`;\r\nexport default ReportForm;","import React from 'react';\r\nimport { Line } from '@ant-design/charts';\r\n\r\nconst LineChart = (props: any) => {\r\n  const COLOR_PLATE_10 = [\r\n    '#5B8FF9',\r\n    '#5AD8A6',\r\n    '#5D7092',\r\n    '#F6BD16',\r\n    '#E8684A',\r\n    '#6DC8EC',\r\n    '#9270CA',\r\n    '#FF9D4D',\r\n    '#269A99',\r\n    '#FF99C3',\r\n  ];\r\n  const config = {\r\n    data: props.data,\r\n    height: 300,\r\n    xField: 'year',\r\n    yField: 'value',\r\n    seriesField: 'category',\r\n    yAxis: {\r\n      label: {\r\n        formatter: function formatter(v: any) {\r\n          return ''.concat(v).replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n            return ''.concat(s, ',');\r\n          });\r\n        },\r\n      },\r\n    },\r\n    color: COLOR_PLATE_10,\r\n    point: {\r\n      shape: function shape(_ref: any) {\r\n        const category = _ref.category;\r\n        return category === 'Gas fuel' ? 'square' : 'circle';\r\n      },\r\n      style: function style(_ref2: any) {\r\n        const year = _ref2.year;\r\n        return { r: Number(year) % 4 ? 0 : 3 };\r\n      },\r\n    },\r\n    smooth: true\r\n  };\r\n  return <Line {...config} />;\r\n};\r\nexport default LineChart;","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nfunction ReportTable({ dataSource, columns }: any) {\r\n  return (\r\n    <>\r\n      <Table size=\"small\"\r\n        dataSource={dataSource}\r\n        columns={columns}\r\n        pagination={{ position: ['bottomCenter'], pageSize: 10 }}\r\n        scroll={{ y: '10vh' }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ReportTable;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport ReportForm from '../../components/Form/Report';\r\nimport LineChart from '../../components/Chart/LineChart';\r\nimport { FormData } from './Interface';\r\nimport ReportTable from './ReportTable';\r\nimport { Button } from 'antd';\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\n\r\nconst dataSource = [\r\n  {\r\n    date: '2021-09-23',\r\n    battery: '3533.000',\r\n    rssi: '-88.000',\r\n    snr: '4.000',\r\n    temp: '25.000'\r\n  },\r\n  {\r\n    date: '2021-09-22',\r\n    battery: '3533.000',\r\n    rssi: '-88.000',\r\n    snr: '1.000',\r\n    temp: '25.000'\r\n  },\r\n  {\r\n    date: '2021-09-21',\r\n    battery: '3533.000',\r\n    rssi: '-88.000',\r\n    snr: '2.000',\r\n    temp: '25.000'\r\n  },\r\n  {\r\n    date: '2021-09-23',\r\n    battery: '3533.000',\r\n    rssi: '-88.000',\r\n    snr: '4.000',\r\n    temp: '25.000'\r\n  },\r\n  {\r\n    date: '2021-09-22',\r\n    battery: '3533.000',\r\n    rssi: '-88.000',\r\n    snr: '1.000',\r\n    temp: '25.000'\r\n  },\r\n  {\r\n    date: '2021-09-21',\r\n    battery: '3533.000',\r\n    rssi: '-88.000',\r\n    snr: '2.000',\r\n    temp: '25.000'\r\n  },\r\n  {\r\n    date: '2021-09-23',\r\n    battery: '3533.000',\r\n    rssi: '-88.000',\r\n    snr: '4.000',\r\n    temp: '25.000'\r\n  },\r\n  {\r\n    date: '2021-09-22',\r\n    battery: '3533.000',\r\n    rssi: '-88.000',\r\n    snr: '1.000',\r\n    temp: '25.000'\r\n  },\r\n  {\r\n    date: '2021-09-21',\r\n    battery: '3533.000',\r\n    rssi: '-88.000',\r\n    snr: '2.000',\r\n    temp: '25.000'\r\n  },\r\n];\r\nconst columns = [\r\n  {\r\n    title: '계측일',\r\n    key: 'date',\r\n    dataIndex: 'date',\r\n    sorter: (a: any, b: any) => Number(a.date.slice(-2)) - Number(b.date.slice(-2)),\r\n  },\r\n  {\r\n    title: 'Battery(mV)',\r\n    key: 'battery',\r\n    dataIndex: 'battery',\r\n  },\r\n  {\r\n    title: 'RSSI(dB)',\r\n    key: 'rssi',\r\n    dataIndex: 'rssi',\r\n  },\r\n  {\r\n    title: 'SNR(dB)',\r\n    key: 'snr',\r\n    dataIndex: 'snr',\r\n  },\r\n  {\r\n    title: '온도(℃)',\r\n    key: 'temp',\r\n    dataIndex: 'temp',\r\n  }\r\n];\r\n\r\nconst hexToRgb = (hexType: string) => {\r\n  const hex = hexType.trim().replace('#', '');\r\n  const rgb = (3 === hex.length) ?\r\n    hex.match(/[a-f\\d]/gi) : hex.match(/[a-f\\d]{2}/gi);\r\n  if (rgb) {\r\n    rgb.forEach(function (str, x, arr: any[]) {\r\n      if (str.length === 1) str = str + str;\r\n      arr[x] = parseInt(str, 16);\r\n    });\r\n    return 'rgba(' + rgb.join(', ') + ', 0.9 )';\r\n  }\r\n};\r\n\r\ninterface DummyEl {\r\n  name: string,\r\n  val: number\r\n}\r\n\r\nfunction ReportDash(props: any) {\r\n  const [list, setList] = useState<DummyEl[]>([]);\r\n  const dmArr: DummyEl[] = [];\r\n  for (let i = 0; i < 26; i++) {\r\n    const dummyEl = {\r\n      name: '장비 번호 ' + i,\r\n      val: i\r\n    };\r\n    dmArr.push(dummyEl);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setList(dmArr);\r\n  }, []);\r\n\r\n  const handleFormValue = (value: FormData) => {\r\n    console.log('리포트 폼 값 :', value);\r\n  };\r\n  return (\r\n    <ClusterBlock>\r\n      <AssetWrapper>\r\n        {list.map((item, idx) => (\r\n          <AssetBlock key={item.name}>\r\n            <label>{item.name}</label>\r\n            <p>{item.val}</p>\r\n          </AssetBlock>)\r\n        )}\r\n      </AssetWrapper>\r\n      <ReportForm handleFormValue={handleFormValue} />\r\n      <ChartWrapper>\r\n        <LineChart data={props.lineData} />\r\n      </ChartWrapper>\r\n      <TableWrapper>\r\n        <ReportTable dataSource={dataSource} columns={columns} />\r\n        <Button className=\"download\" type=\"primary\" shape=\"round\" onClick={() => console.log('click')} icon={<DownloadOutlined />} size={'middle'}>\r\n          Export\r\n        </Button>\r\n      </TableWrapper>\r\n    </ClusterBlock>);\r\n}\r\n\r\nconst ClusterBlock = styled.div`\r\n    position: absolute;\r\n    top: 60px;\r\n    bottom: 0;\r\n    left: 330px;\r\n    width: calc(100% - 350px);\r\n    height: auto;\r\n    background-color: ${(props) => hexToRgb(props.theme.clusterBg)};\r\n    color: ${(props) => props.theme.fontColor};\r\n    z-index: 2;\r\n    padding: 20px;\r\n    font-size: 17px;\r\n    border-radius: 20px;\r\n    z-index: 3;\r\n    margin: 10px;\r\n    transition: all 0.3s ease-in-out;\r\n    overflow-y: auto;\r\n    box-sizing: border-box;\r\n`;\r\nconst AssetWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  overflow-y: auto;\r\n  padding-bottom: 25px;\r\n`;\r\nconst AssetBlock = styled.div`\r\n  cursor: pointer;\r\n  min-width: 130px;\r\n  min-height: 100px;\r\n  border: 1px solid;\r\n  border-color: #eaeaea;\r\n  color: ${(props) => props.theme.fontColor};\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: .3em;\r\n  font-size: 18px;\r\n  & label {\r\n    color: ${(props) => props.theme.fontColor};\r\n    margin-bottom: 18px;\r\n  }\r\n\r\n  & p {\r\n    text-align: center;\r\n    font-size: 1.7em;\r\n    font-weight: bold;\r\n  }\r\n`;\r\nconst ChartWrapper = styled.section`\r\n  border: 1px solid #eaeaea;\r\n  padding: 10px 15px;\r\n  border-radius: 10px;  \r\n`;\r\nconst TableWrapper = styled.section`\r\n  border: 1px solid #eaeaea;\r\n  padding: 10px 15px;\r\n  border-radius: 10px;  \r\n  margin-top: 5px;\r\n  position: relative;\r\n\r\n  & button.download {\r\n    position: absolute;\r\n    right: 0;\r\n    bottom: 0;\r\n    margin: .5rem;\r\n  }\r\n`;\r\nexport default ReportDash;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Data } from '../../constant/Dashboard';\r\nimport ReportList from './ReportList';\r\nimport ReportDash from './ReportDash';\r\n\r\nfunction Report(props: { ip: string, data: Data, dummy: Data, lineData: any }) {\r\n  const { data, lineData } = props;\r\n  console.log('데이터 호출 :', data);\r\n  const { dummy } = props;\r\n\r\n  return (\r\n    <ReportWrapper>\r\n      <ReportList data={dummy} />\r\n      <ReportDash lineData={lineData} />\r\n    </ReportWrapper>\r\n  );\r\n}\r\nconst ReportWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nexport default Report;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useAsync } from 'react-async';\r\nimport { apiGet, ipGet } from '../lib/api';\r\nimport Report from '../pages/Report/Report';\r\nimport { Data } from '../constant/Dashboard';\r\n\r\n/**\r\n * 외부 api 호출\r\n */\r\nconst fetchClusterData = async () => {\r\n  const res = await apiGet({\r\n    url: 'https://gorest.co.in/public-api/comments',\r\n  });\r\n  return res.data;\r\n};\r\n\r\nfunction ReportContainer(props: any) {\r\n  /**\r\n   * 외부api useAsync\r\n   */\r\n  const clusterData = useAsync({\r\n    deferFn: fetchClusterData,\r\n    initialValue: [],\r\n  });\r\n\r\n  /**\r\n * 차트 api 호출\r\n */\r\n  const [lineData, setData] = useState([]);\r\n  useEffect(() => {\r\n    asyncFetch();\r\n  }, []);\r\n  const asyncFetch = () => {\r\n    fetch('https://gw.alipayobjects.com/os/bmw-prod/55424a73-7cb8-4f79-b60d-3ab627ac5698.json') // 더미데이터\r\n      .then((response) => response.json())\r\n      .then((json) => setData(json))\r\n      .catch((error) => {\r\n        console.log('fetch data failed', error);\r\n      });\r\n  };\r\n\r\n  /**\r\n   * 백단 테스트용 api 입니다\r\n   * api 정의 파일은 lib/api.ts에 있습니다.\r\n   */\r\n  const [ip, setIp] = useState('');\r\n  function callback(data: any) {\r\n    setIp(data);\r\n  }\r\n  useEffect(\r\n    () => {\r\n      // 클라이언트의 IP주소를 알아내는 백엔드의 함수를 호출합니다.\r\n      ipGet('/ip', callback);\r\n    }, [ip]\r\n  );\r\n  // demo api 끝단\r\n\r\n\r\n  const data: Data =\r\n  {\r\n    project: 'PJ_0917',\r\n    aplicationId: '11',\r\n    coords: ['10.15151', '10.15151'],\r\n    regDate: '2021-08-30',\r\n    userId: 'sma_01',\r\n    sms: ['010-666-6666', '010-555-5555'],\r\n    note: 'sample demo'\r\n  };\r\n\r\n  useEffect(() => {\r\n    clusterData.run();\r\n  }, []);\r\n\r\n  return <Report ip={ip} dummy={data} data={clusterData.data.data} lineData={lineData} />;\r\n}\r\n\r\nexport default ReportContainer;\r\n","import { Button } from 'antd';\r\nimport { UserAddOutlined, ProjectOutlined } from '@ant-design/icons';\r\n\r\nfunction AddButon({ name, type, handleForm }: any) {\r\n  return (\r\n    <Button onClick={() => { handleForm(type); }} type=\"primary\" shape=\"round\" icon={(type === 'user') ? <UserAddOutlined /> : <ProjectOutlined />} size={'large'}>\r\n      {name}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default AddButon;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from './store';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import axios from 'axios';\n\nconst baseURL = 'http://localhost:8080/api';\n\n// @route   POST /api/apiGetProjects\n// @desc    전체 프로젝트를 조회한다.\n// @access  public\nexport const apiGetProjects = () => {\n  return axios.get(baseURL + '/getProjects');\n};\n\n// @route   POST /api/addOrUpdateProject\n// @desc    프로젝트를 추가/수정한다.\n// @access  private\nexport const apiAddOrUpdateProject = (project : any) => {\n  console.log('====== api call project ', project);\n  \n  return axios.post(baseURL + '/addOrUpdateProject', {\n    id: project.id,\n    name: project.name,\n    scene_name: project.scene_name,\n    application_id: project.application_id,\n    sms_number1: project.sms_number1,\n    sms_number2: project.sms_number2,\n    note: project.note,\n    url: project.url,\n  });\n};\n  \n// @route   GET /api/deleteProjectById\n// @desc    id로 프로젝트를 삭제한다.\n// @access  private\nexport const apiDeleteProjectById = (id : any) => {    \n  return axios.get(baseURL + '/deleteProjectById', {\n    params: {\n      id: id\n    }\n  });\n};","/* eslint-disable camelcase */\r\nimport axios from 'axios';\r\n\r\n// userStore.ts\r\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { apiGetProjects, apiAddOrUpdateProject, apiDeleteProjectById } from '../lib/apiProject';\r\nimport { setupAxiosInterceptors } from '../lib/apiUser';\r\n\r\n// axios를 통한 통신\r\nexport const getProjectList = createAsyncThunk(\r\n  'GET_PROJECTLIST', \r\n  async () => {\r\n    setupAxiosInterceptors();\r\n    const result = await apiGetProjects().then(response => {\r\n      return response.data;\r\n    });\r\n    console.log('result ', result);\r\n    return result;\r\n  });\r\nexport const handleProjectList = createAsyncThunk(\r\n  'UPDATE_PROJECTLIST', \r\n  async (data:Project) => {\r\n    setupAxiosInterceptors();\r\n    const result = await apiAddOrUpdateProject(data).then(response => {\r\n      // return console.log('apiAddOrUpdateProject ============ ', response.data);\r\n      return response.data;\r\n    });\r\n    console.log('updateResult', result);\r\n    return result;\r\n  });\r\nexport const deleteProjectList = createAsyncThunk(\r\n  'UPDATE_PROJECTLIST', \r\n  async (id:string) => {\r\n    setupAxiosInterceptors();\r\n    const result = await apiDeleteProjectById(id).then(response => {\r\n      //return console.log('apiDeleteProject ============ ', response.data);\r\n      return response.data;\r\n    });\r\n    console.log('deleteResult', result);\r\n    return result;\r\n  });\r\n\r\n\r\n// state 타입 지정\r\ninterface Project {\r\n  id: string\r\n  name: string\r\n  scene_name: string\r\n  application_id: string\r\n  sms_number1: string\r\n  sms_number2: string\r\n  note: string,\r\n  url: string,\r\n}\r\n\r\ninterface Form {\r\n  type: string\r\n  mode: string\r\n  visible: boolean\r\n}\r\n\r\ninterface State {\r\n  project: Project[]\r\n  form: Form\r\n}\r\n\r\nconst initialState: State = {\r\n  project: [],\r\n  form: {\r\n    type: '',\r\n    mode: 'add',\r\n    visible: false\r\n  }\r\n};\r\n\r\nconst projectSlice = createSlice({\r\n  name: 'project', // 액션타입의 이름이 중복되는것을 막기위한 네임값\r\n  initialState, // 리듀서에서 사용되는 initialState\r\n  reducers: { // 리듀서\r\n    addProject(state, action: PayloadAction<Project>) { \r\n      state.project.push(action.payload);\r\n      // immer가 내장 되어있어 알아서 불변성을 지켜준다.\r\n      handleProjectList(action.payload);\r\n    },\r\n    updateProject(state, action: PayloadAction<Project>) {\r\n      const updateProject = state.project.map((item) => {\r\n        if (item.id === action.payload.id) {\r\n          return { ...item, ...action.payload };\r\n        } else return item;\r\n      });\r\n      state.project = updateProject;\r\n    },\r\n    deleteProject(state, action: PayloadAction<Project>) {\r\n      const newProject = state.project.filter((list) => list.id !== action.payload.id);\r\n      state.project = newProject;\r\n    },\r\n    openProject(state, action: PayloadAction<boolean>) {\r\n      state.form.visible = action.payload;\r\n    },\r\n    setForm(state, action: PayloadAction<Form>) {\r\n      state.form = action.payload;\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getProjectList.fulfilled, (state, action) => {\r\n        const projectList = [...action.payload];\r\n        state.project = projectList;\r\n      });\r\n  },\r\n});\r\n\r\nexport default projectSlice.reducer;\r\nexport const { addProject, updateProject, deleteProject, openProject, setForm } = projectSlice.actions;\r\n","import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { setupAxiosInterceptors } from '../../lib/apiUser';\r\nimport { apiAddOrUpdateProject, apiDeleteProjectById } from '../../lib/apiProject';\r\n//리덕스\r\nimport { useAppSelector, useAppDispatch } from '../../redux/hooks';\r\nimport { addProject, updateProject, openProject, handleProjectList } from '../../redux/projectSlice';\r\n\r\nconst { TextArea } = Input;\r\nconst ProjectForm = (props: any) => {\r\n  const projectForm = useAppSelector(state => state.project.form);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [form] = Form.useForm();\r\n  const { formRef, handleData } = props;\r\n  // const onFinish = (values: any) => {\r\n  //   console.log('Success:', values);\r\n  //   const data = {\r\n  //     id: values.id === undefined ? '' : values.id,\r\n  //     name: values.name === undefined ? '' : values.name,\r\n  //     scene_name: values.scene_name === undefined ? '' : values.scene_name,\r\n  //     application_id: values.application_id === undefined ? '' : values.application_id,\r\n  //     sms_number1: values.sms_number1 === undefined ? '' : values.sms_number1,\r\n  //     sms_number2: values.sms_number2 === undefined ? '' : values.sms_number2,\r\n  //     url: `/ht-static/scenes/${values.name}/${values.scene_name}.json`,\r\n  //     note: values.note === undefined ? '' : values.note,\r\n  //   };\r\n  //   console.log('백단 통신 필요: update api');\r\n  //   console.log(props);\r\n\r\n  //   /** 이부분은 리듀서로 가야함 */\r\n  //   setupAxiosInterceptors();\r\n  //   apiAddOrUpdateProject(data).then(response => {\r\n  //     // console.log('apiAddOrUpdateProject ============ ', response.data);\r\n  //   });\r\n\r\n\r\n  //   formRef.current!.resetFields();\r\n  //   (modVisible === true) ? props.handleModify(data) : props.handleProject(data);\r\n  //   props.handleVisible();\r\n  // };\r\n  const onFinish = (values: any) => {\r\n    const data = {\r\n      id: values.id === undefined ? '' : values.id,\r\n      name: values.name === undefined ? '' : values.name,\r\n      scene_name: values.scene_name === undefined ? '' : values.scene_name,\r\n      application_id: values.application_id === undefined ? '' : values.application_id,\r\n      sms_number1: values.sms_number1 === undefined ? '' : values.sms_number1,\r\n      sms_number2: values.sms_number2 === undefined ? '' : values.sms_number2,\r\n      url: `/ht-static/scenes/${values.name}/${values.scene_name}.json`,\r\n      note: values.note === undefined ? '' : values.note,\r\n    };\r\n    /** \r\n     * update api 리듀서로 이동 \r\n     * setupAxiosInterceptors();\r\n     * apiAddOrUpdateProject(data).then(response => {\r\n     *   console.log('apiAddOrUpdateProject ============ ', response.data);\r\n     * });\r\n     * */\r\n    dispatch(handleProjectList(data));\r\n    if (projectForm.mode === 'modify') {\r\n      dispatch(updateProject(data));\r\n      dispatch(openProject(false));\r\n    } else {\r\n      formRef.current!.resetFields();\r\n      dispatch(addProject(data));\r\n      dispatch(openProject(false));\r\n    }\r\n  };\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  useEffect(() => {\r\n    form.setFieldsValue(handleData);\r\n  }, [form, handleData]);\r\n  return (\r\n    <StyledLoginForm>\r\n      <Form\r\n        ref={formRef}\r\n        form={form}\r\n        name=\"project\"\r\n        labelCol={{ span: 8 }}\r\n        wrapperCol={{ span: 16 }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.Item label=\"id\" style={{ display: 'none' }} name=\"id\">\r\n          <Input type=\"text\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"프로젝트 명\"\r\n          name=\"name\"\r\n          rules={[{ required: true, message: '프로젝트 이름이 필요합니다' }]}\r\n        >\r\n          <Input placeholder=\"프로젝트 명\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"씬 이름\"\r\n          name=\"scene_name\"\r\n          rules={[{ required: true, message: '씬 이름이 필요합니다' }]}\r\n        >\r\n          <Input placeholder=\"씬 이름\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"어플리케이션 ID\"\r\n          name=\"application_id\"\r\n          rules={[{ required: true, message: '어플리케이션 ID 가 필요합니다' }]}\r\n        >\r\n          <Input type=\"number\" placeholder=\"어플리케이션 ID\" />\r\n        </Form.Item>\r\n        <Form.Item label=\"SMS\" style={{ marginBottom: 0 }}>\r\n          <Form.Item\r\n            name=\"sms_number1\"\r\n            style={{ display: 'inline-block', width: 'calc(50% - 8px)' }}\r\n          >\r\n            <Input type=\"tel\" placeholder=\"SMS 번호 '-' 제외\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"sms_number2\"\r\n            style={{ display: 'inline-block', width: 'calc(50% - 8px)', margin: '0 8px' }}\r\n          >\r\n            <Input type=\"tel\" placeholder=\"SMS 번호 '-' 제외\" />\r\n          </Form.Item>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"노트\"\r\n          name=\"note\"\r\n        >\r\n          <TextArea rows={4} />\r\n        </Form.Item>\r\n\r\n        <CustomButtonGroup>\r\n          <CustomButton>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              {(projectForm.mode === 'modify') ? '변경' : '추가'}\r\n            </Button>\r\n          </CustomButton>\r\n          <CustomButton>\r\n            <Button onClick={() => {\r\n              formRef.current!.resetFields();\r\n              dispatch(openProject(false));\r\n            }}>\r\n              취소\r\n            </Button>\r\n          </CustomButton>\r\n        </CustomButtonGroup>\r\n      </Form>\r\n    </StyledLoginForm>\r\n  );\r\n};\r\n\r\nconst StyledLoginForm = styled.div`\r\n  padding: 20px;\r\n  width: 100%;\r\n  background-color: ${(props) => props.theme.clusterBg};\r\n  & label {\r\n    color: ${(props) => props.theme.fontColor};\r\n  }\r\n`;\r\nconst CustomButtonGroup = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 150px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst CustomButton = styled.div`\r\n  width: 70px;\r\n  & button {\r\n    width:100%;\r\n  }\r\n`;\r\n\r\nexport default ProjectForm;","/* eslint-disable camelcase */\r\nimport axios from 'axios';\r\n\r\n// userStore.ts\r\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { apiGetUsers, setupAxiosInterceptors, apiAddOrUpdateUser, apiDeleteUserById } from '../lib/apiUser';\r\n\r\n// axios를 통한 통신\r\nexport const getUserList = createAsyncThunk('GET_USERLIST', async () => {\r\n  setupAxiosInterceptors();\r\n  const result = await apiGetUsers().then(response => {\r\n    return response.data;\r\n  });\r\n  console.log('result ', result);\r\n  return result;\r\n});\r\nexport const handleUserList = createAsyncThunk(\r\n  'UPDATE_USERLIST', \r\n  async (data:User) => {\r\n    setupAxiosInterceptors();\r\n    const result = await apiAddOrUpdateUser(data).then(response => {\r\n      // return console.log('apiAddOrUpdateProject ============ ', response.data);\r\n      return response.data;\r\n    });\r\n    console.log('updateResult', result);\r\n    return result;\r\n  });\r\nexport const deleteUserList = createAsyncThunk(\r\n  'UPDATE_PROJECTLIST', \r\n  async (id:string) => {\r\n    setupAxiosInterceptors();\r\n    const result = await apiDeleteUserById(id).then(response => {\r\n      //return console.log('apiDeleteProject ============ ', response.data);\r\n      return response.data;\r\n    });\r\n    console.log('deleteResult', result);\r\n    return result;\r\n  });\r\n// state 타입 지정\r\ninterface User {\r\n  id: string\r\n  username: string\r\n  password: string\r\n  company_name: string\r\n  manager_name: string\r\n  contact_number: string\r\n  email: string\r\n  note: string\r\n  projectNameList: string[]\r\n  projects: string | string[]\r\n}\r\n\r\ninterface Form {\r\n  type: string\r\n  mode: string\r\n  visible: boolean\r\n}\r\n\r\ninterface State {\r\n  user: User[]\r\n  form: Form\r\n}\r\n\r\nconst initialState: State = {\r\n  user: [],\r\n  form: {\r\n    type: '',\r\n    mode: 'add',\r\n    visible: false\r\n  }\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user', // 액션타입의 이름이 중복되는것을 막기위한 네임값\r\n  initialState, // 리듀서에서 사용되는 initialState\r\n  reducers: { // 리듀서\r\n    addUser(state, action: PayloadAction<User>) { \r\n      state.user.push(action.payload);\r\n      // immer가 내장 되어있어 알아서 불변성을 지켜준다.\r\n    },\r\n    updateUser(state, action: PayloadAction<User>) {\r\n      const updateUser = state.user.map((item) => {\r\n        if (item.id === action.payload.id) {\r\n          const newValue =  { ...item, ...action.payload };\r\n          return newValue;\r\n        } else return item;\r\n      });\r\n      state.user = updateUser;\r\n    },\r\n    deleteUser(state, action: PayloadAction<User>) {\r\n      const newUser = state.user.filter((list) => list.id !== action.payload.id);\r\n      // \"Mutate\" the existing state to save the new array\r\n      state.user = newUser;\r\n    },\r\n    openUser(state, action: PayloadAction<boolean>) {\r\n      state.form.visible = action.payload;\r\n    },\r\n    setForm(state, action: PayloadAction<Form>) {\r\n      state.form = action.payload;\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(getUserList.fulfilled, (state, action) => {\r\n      const userList = [...action.payload];\r\n      state.user = userList;\r\n    });\r\n  },\r\n});\r\n\r\nexport default userSlice.reducer;\r\nexport const { addUser, updateUser, openUser, deleteUser, setForm } = userSlice.actions;\r\n","import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Form, Input, Button, Select } from 'antd';\r\nimport { setupAxiosInterceptors, apiAddOrUpdateUser } from '../../lib/apiUser';\r\nimport { totalmem } from 'os';\r\n//리덕스\r\nimport { useAppSelector, useAppDispatch } from '../../redux/hooks';\r\nimport { addUser, updateUser, openUser, handleUserList } from '../../redux/userSlice';\r\n\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\n\r\nconst UserForm = (props: any) => {\r\n  const userForm = useAppSelector(state => state.user.form);\r\n  const dispatch = useAppDispatch();\r\n  const [form] = Form.useForm();\r\n  const { formRef, user, modVisible, project, totalProjectList, handleData } = props;\r\n\r\n  console.log('UserForm user ', user);\r\n\r\n  const totalProjectNameList: any[] = [];\r\n\r\n  if (totalProjectList !== undefined) {\r\n    for (let i = 0; i < totalProjectList.length; i++) {\r\n      if (user !== undefined) { // 내가 등록한 프로젝트 + 지정된 사용자 없는 리스트만 보여줌\r\n        if (totalProjectList[i].user_id === user.id) {\r\n          totalProjectNameList.push(<Option key={totalProjectList[i].id} value={totalProjectList[i].name}>{totalProjectList[i].name}</Option>);\r\n        }\r\n      }\r\n      if (totalProjectList[i].user_id === '' || totalProjectList[i].user_id == null) {\r\n        totalProjectNameList.push(<Option key={totalProjectList[i].id} value={totalProjectList[i].name}>{totalProjectList[i].name}</Option>);\r\n      }\r\n    };\r\n  }\r\n  // const onFinish = (values: any) => {\r\n  //   const data = {\r\n  //     id: values.id === undefined ? '' : values.id,\r\n  //     username: values.username === undefined ? '' : values.username,\r\n  //     password: values.password === undefined ? '' : values.password,\r\n  //     company_name: values.company_name === undefined ? '' : values.company_name,\r\n  //     manager_name: values.manager_name === undefined ? '' : values.manager_name,\r\n  //     contact_number: values.contact_number === undefined ? '' : values.contact_number,\r\n  //     email: values.email === undefined ? '' : values.email,\r\n  //     note: values.note === undefined ? '' : values.note,\r\n  //     projectNameList: values.projectNameList,\r\n  //     projects: values.projects,\r\n  //   };\r\n  //   console.log('백단 통신 필요: update api');\r\n  //   console.log(props);\r\n  //   console.log('data ', data);\r\n\r\n  //   setupAxiosInterceptors();\r\n  //   apiAddOrUpdateUser(data).then(response => {\r\n  //     console.log('apiAddOrUpdateUser ============ ', response.data);\r\n  //   });\r\n\r\n  //   formRef.current!.resetFields();\r\n  //   (modVisible === true) ? props.handleModify(data) : props.handleUser(data);\r\n  //   props.handleVisible();\r\n  // };\r\n  const onFinish = (values: any) => {\r\n    const data = {\r\n      id: values.id === undefined ? '' : values.id,\r\n      username: values.username === undefined ? '' : values.username,\r\n      password: values.password === undefined ? '' : values.password,\r\n      company_name: values.company_name === undefined ? '' : values.company_name,\r\n      manager_name: values.manager_name === undefined ? '' : values.manager_name,\r\n      contact_number: values.contact_number === undefined ? '' : values.contact_number,\r\n      email: values.email === undefined ? '' : values.email,\r\n      note: values.note === undefined ? '' : values.note,\r\n      projectNameList: values.projectNameList,\r\n      projects: values.projects,\r\n    };\r\n    /** \r\n     * update api 리듀서로 이동 \r\n     * setupAxiosInterceptors();\r\n     * apiAddOrUpdateUser(data).then(response => {\r\n     *   console.log('apiAddOrUpdateUser ============ ', response.data);\r\n     * });\r\n     * */\r\n    dispatch(handleUserList(data));\r\n    if (userForm.mode === 'modify') {\r\n      dispatch(updateUser(data));\r\n      dispatch(openUser(false));\r\n    } else {\r\n      formRef.current!.resetFields();\r\n      dispatch(addUser(data));\r\n      dispatch(openUser(false));\r\n    }\r\n  };\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  const handleSelectChange = (value: any) => {\r\n    console.log(`Selected: ${value}`);\r\n  };\r\n  useEffect(() => {\r\n    form.setFieldsValue(handleData);\r\n  }, [form, handleData]);\r\n  return (\r\n    <StyledForm>\r\n      <Form\r\n        ref={formRef}\r\n        form={form}\r\n        name=\"user\"\r\n        labelCol={{ span: 10 }}\r\n        wrapperCol={{ span: 16 }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.Item label=\"id\" style={{ display: 'none' }} name=\"id\">\r\n          <Input type=\"text\" />\r\n        </Form.Item>\r\n        <Form.Item label=\"projects\" style={{ display: 'none' }} name=\"projects\" />\r\n\r\n\r\n        {/* <Form.Item label=\"id\" name=\"id\">\r\n          <Input type=\"text\" />\r\n        </Form.Item>\r\n        <Form.Item label=\"projects\" name=\"projects\">\r\n          <Input type=\"text\" />\r\n        </Form.Item> */}\r\n\r\n        <Form.Item\r\n          label={'사용자 ID'}\r\n          name=\"username\"\r\n          rules={[{ required: true, message: '사용자 ID가 필요합니다' }]}\r\n        >\r\n          <Input disabled={userForm.mode === 'modify' ? true : false} placeholder=\"사용자 ID\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={'사용자 PW'}\r\n          name=\"password\"\r\n          rules={[{ required: true, message: '사용자 PW가 필요합니다' }]}\r\n        >\r\n          <Input placeholder=\"사용자 PW\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={'회사명'}\r\n          name=\"company_name\"\r\n          rules={[{ required: true, message: '회사명이 필요합니다' }]}\r\n        >\r\n          <Input disabled={userForm.mode === 'modify' ? true : false} placeholder=\"회사명\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={'관리자'}\r\n          name=\"manager_name\"\r\n          rules={[{ required: true, message: '관리자를 등록해 주십시오' }]}\r\n        >\r\n          <Input placeholder=\"관리자\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={'연락처'}\r\n          name=\"contact_number\"\r\n        >\r\n          <Input type=\"tel\" placeholder=\"연락처\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={'E-mail'}\r\n          name=\"email\"\r\n          rules={[{ type: 'email', message: '이메일 형식에 맞지 않습니다' }]}\r\n        >\r\n          <Input placeholder=\"example@email.com\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={'프로젝트 리스트'}\r\n          name=\"projectNameList\"\r\n        >\r\n          <Select\r\n            mode=\"multiple\"\r\n            size={'middle'}\r\n            placeholder=\"Please select\"\r\n            onChange={handleSelectChange}\r\n            style={{ width: '100%' }}\r\n            defaultValue={user === undefined ? [] : user.projectNameList}\r\n          >\r\n            {totalProjectNameList}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={'노트'}\r\n          name=\"note\"\r\n        >\r\n          <TextArea rows={4} />\r\n        </Form.Item>\r\n\r\n        <CustomButtonGroup>\r\n          <CustomButton>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              {(userForm.mode === 'modify') ? '변경' : '추가'}\r\n            </Button>\r\n          </CustomButton>\r\n          <CustomButton>\r\n            <Button onClick={() => {\r\n              formRef.current!.resetFields();\r\n              dispatch(openUser(false));\r\n            }}>\r\n              취소\r\n            </Button>\r\n          </CustomButton>\r\n        </CustomButtonGroup>\r\n      </Form>\r\n    </StyledForm>\r\n  );\r\n};\r\n\r\nconst StyledForm = styled.div`\r\n  padding: 20px;\r\n  width: 100%;\r\n  background-color: ${(props) => props.theme.clusterBg};\r\n  border-radius: 15px;\r\n  & label {\r\n    color: ${(props) => props.theme.fontColor};\r\n  }\r\n`;\r\nconst CustomButtonGroup = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 150px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst CustomButton = styled.div`\r\n  width: 70px;\r\n  & button {\r\n    width:100%;\r\n  }\r\n`;\r\n\r\nexport default UserForm;","import React from 'react';\r\nimport { Modal } from 'antd';\r\nimport ProjectForm from '../../../components/Form/Project';\r\nimport UserForm from '../../../components/Form/User';\r\nimport { FormInstance } from 'antd/es/form';\r\n\r\nimport { useAppSelector, useAppDispatch } from '../../../redux/hooks';\r\nimport { openProject } from '../../../redux/projectSlice';\r\nimport { openUser } from '../../../redux/userSlice';\r\nconst AddModal = (props: any) => {\r\n  const projectForm = useAppSelector(state => state.project.form);\r\n  const userForm = useAppSelector(state => state.user.form);\r\n  const dispatch = useAppDispatch();\r\n  const formRef = React.createRef<FormInstance>();\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={props.type === 'user' && userForm.mode === 'add' ? '사용자 추가' : '프로젝트 추가'}\r\n        visible={props.type === 'user' && userForm.mode === 'add' ? userForm.visible : projectForm.visible}\r\n        onCancel={() => (props.type === 'user') ? dispatch(openUser(false)) : dispatch(openProject(false))}\r\n        footer={null}\r\n      >\r\n        {\r\n          props.type === 'user' && userForm.mode === 'add' ? <UserForm label={userForm.type} formRef={formRef} /> :\r\n            <ProjectForm label={projectForm.type} formRef={formRef} />\r\n        }\r\n      </Modal>\r\n      <Modal\r\n        title={props.type === 'user' && userForm.mode === 'modify' ? '사용자 변경' : '프로젝트 변경'}\r\n        visible={props.type === 'user' && userForm.mode === 'modify' ? userForm.visible : projectForm.visible}\r\n        onCancel={() => (props.type === 'user') ? dispatch(openUser(false)) : dispatch(openProject(false))}\r\n        footer={null}\r\n      >\r\n        {\r\n          props.type === 'user' && userForm.mode === 'modify' ? <UserForm label={userForm.type} formRef={formRef} {...props} /> :\r\n            <ProjectForm label={projectForm.type} formRef={formRef} {...props} />\r\n        }\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddModal;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Table, Tag, Space, Button, Popconfirm, message } from 'antd';\r\n\r\nfunction UserTable({ dataSource, handleModify, handleDelete }: any) {\r\n  function confirm(e: any, record: any) {\r\n    console.log(record);\r\n    handleDelete('user', record);\r\n    message.success('데이터 삭제 완료');\r\n  }\r\n  console.log('UserTable data ', dataSource);\r\n  function cancel(e: any) {\r\n    console.log(e);\r\n    message.error('데이터 삭제 취소');\r\n  }\r\n  const columns = [\r\n    {\r\n      title: '',\r\n      dataIndex: 'id',\r\n      key: 'id'\r\n    },\r\n    {\r\n      title: '사용자 아이디',\r\n      dataIndex: 'username',\r\n      key: 'username'\r\n    },\r\n    {\r\n      title: '회사명',\r\n      dataIndex: 'company_name',\r\n      key: 'company_name'\r\n    },\r\n    {\r\n      title: '담당자 명',\r\n      dataIndex: 'manager_name',\r\n      key: 'manager_name',\r\n    },\r\n    {\r\n      title: '연락처',\r\n      dataIndex: 'contact_number',\r\n      key: 'contact_number',\r\n    },\r\n    {\r\n      title: 'E-mail',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n    },\r\n    {\r\n      title: '프로젝트 리스트',\r\n      key: 'projectNameList',\r\n      dataIndex: 'projectNameList',\r\n      render: (projectNameList: string[], record: any) => (\r\n        <>\r\n          {projectNameList?.map(list => {\r\n            const color = list.length > 5 ? 'geekblue' : 'green';\r\n            return (\r\n              <Tag color={color} key={list}>\r\n                {list.toUpperCase()}\r\n              </Tag>\r\n            );\r\n          })}\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: '노트',\r\n      dataIndex: 'note',\r\n      key: 'note',\r\n      render: (text: string) => {\r\n        return <NoteText>{text}</NoteText>;\r\n      }\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (text: string, record: any) => (\r\n        <Space size=\"middle\">\r\n\r\n          <Button type=\"primary\" onClick={(event) => {\r\n            handleModify('user', record);\r\n          }}>정보변경</Button>\r\n          <Popconfirm\r\n            title=\"데이터를 삭제하시겠습니까?\"\r\n            onConfirm={(e) => confirm(e, record)}\r\n            onCancel={cancel}\r\n            okText=\"확인\"\r\n            cancelText=\"취소\"\r\n          >\r\n            <Button type=\"primary\" danger>삭제</Button>\r\n          </Popconfirm>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Table size=\"small\" dataSource={dataSource} columns={columns} />\r\n  );\r\n}\r\n\r\nconst NoteText = styled.span`\r\n  display: flex;\r\n  width: 120px;\r\n`;\r\nexport default UserTable;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Breadcrumb } from 'antd';\r\nimport AddButton from '../../../components/Common/AddButton';\r\nimport AddModal from '../AddModal/AddModal';\r\nimport UserTable from '../UserTable';\r\n//리덕스\r\nimport { useAppSelector, useAppDispatch } from '../../../redux/hooks';\r\nimport { setForm, deleteUser, deleteUserList } from '../../../redux/userSlice';\r\n\r\nexport const UserTab = () => {\r\n  const fetchUser = useAppSelector(state => state.user);\r\n  useEffect(() => {\r\n    console.log(fetchUser, 'changed');\r\n  }, [fetchUser]);\r\n  const { form } = fetchUser;\r\n  const [userData, getData] = useState();\r\n  // 현재는 리덕스 스테이트에서 가지고오고있음\r\n  // 추후 api를 통한 백단에서 가지고 오도록 수정\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleForm = (type: string) => {\r\n    dispatch(setForm({ type, mode: 'add', visible: true }));\r\n  };\r\n  const handleModify = (type: string, record: any) => {\r\n    dispatch(setForm({ type, mode: 'modify', visible: true }));\r\n    getData(record);\r\n    console.log(record);\r\n  };\r\n  const handleDelete = (type: string, record: any) => {\r\n    dispatch(deleteUserList(record.id));\r\n    // 백앤드 통신\r\n    dispatch(deleteUser(record));\r\n  };\r\n  return (\r\n    <>\r\n      <AddModal type={form.type} handleData={userData} />\r\n      <TitleWrapper>\r\n        <Breadcrumb className=\"page-title\" style={{ margin: '16px 0' }}>\r\n          <Breadcrumb.Item>사용자 관리</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <div>\r\n          <AddButton name={'사용자 추가'} type={'user'} handleForm={handleForm} />\r\n        </div>\r\n      </TitleWrapper>\r\n      <Contents>\r\n        <UserTable dataSource={fetchUser.user} handleDelete={handleDelete} handleModify={handleModify} />\r\n      </Contents>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst Contents = styled.div`\r\n  background: #ffffff;\r\n  padding: 24px;\r\n  min-height: 380px;\r\n  max-width: 100vw;\r\n  border-radius: 15px;\r\n`;\r\n\r\nconst TitleWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0 1em;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Table, Space, Button, Popconfirm, message } from 'antd';\r\n\r\nfunction ProjectTable({ dataSource, handleModify, handleDelete }: any) {\r\n  function confirm(e: any, record: any) {\r\n    console.log(record);\r\n    handleDelete('project', record);\r\n    // delete api 들어가야함.\r\n    message.success('데이터 삭제 완료');\r\n  }\r\n\r\n  function cancel(e: any) {\r\n    console.log(e);\r\n    message.error('데이터 삭제 취소');\r\n  }\r\n  const columns = [\r\n    {\r\n      title: '',\r\n      dataIndex: 'id',\r\n      key: 'id',\r\n    },\r\n    {\r\n      title: '프로젝트 명',\r\n      dataIndex: 'name',\r\n      key: 'project'\r\n    },\r\n    {\r\n      title: 'Scene 이름',\r\n      dataIndex: '',\r\n      key: ''\r\n    },\r\n    {\r\n      title: 'Application Id',\r\n      dataIndex: 'application_id',\r\n      key: 'application_id',\r\n    },\r\n    {\r\n      title: 'SMS 번호',\r\n      dataIndex: 'sms_number1',\r\n      key: 'sms_number1',\r\n    },\r\n    {\r\n      title: '',\r\n      dataIndex: 'sms_number1',\r\n      key: 'sms_number2',\r\n    },\r\n    // {\r\n    //   title: 'SMS 번호',\r\n    //   dataIndex: 'sms',\r\n    //   key: 'sms',\r\n    //   render: (sms: string[], record: any) => (\r\n    //     <>\r\n    //       {sms.map(list => {\r\n    //         return (\r\n    //           <Tag color={'green'} key={list}>\r\n    //             {list.toUpperCase()}\r\n    //           </Tag>\r\n    //         );\r\n    //       })}\r\n    //     </>\r\n    //   ),\r\n    // },\r\n    {\r\n      title: '생성일',\r\n      dataIndex: 'created_at',\r\n      key: 'created_at',\r\n    },\r\n    {\r\n      title: 'URL',\r\n      dataIndex: 'url',\r\n      key: 'url',\r\n    },\r\n    {\r\n      title: '사용자 ID',\r\n      dataIndex: 'user_id',\r\n      key: 'user_id',\r\n    },\r\n    {\r\n      title: '노트',\r\n      dataIndex: 'note',\r\n      key: 'note',\r\n      render: (text: string) => {\r\n        return <NoteText>{text}</NoteText>;\r\n      }\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (text: string, record: any) => (\r\n        <Space size=\"middle\">\r\n          <Button type=\"primary\" onClick={(event) => {\r\n            handleModify('project', record);\r\n          }}>정보변경</Button>\r\n          <Popconfirm\r\n            title=\"데이터를 삭제하시겠습니까?\"\r\n            onConfirm={(e) => confirm(e, record)}\r\n            onCancel={cancel}\r\n            okText=\"확인\"\r\n            cancelText=\"취소\"\r\n          >\r\n            <Button type=\"primary\" danger>삭제</Button>\r\n          </Popconfirm>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Table size=\"small\" dataSource={dataSource} columns={columns} />\r\n    </>\r\n  );\r\n}\r\n\r\nconst NoteText = styled.span`\r\n  display: flex;\r\n  width: 120px;\r\n`;\r\nexport default ProjectTable;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Breadcrumb } from 'antd';\r\nimport AddButton from '../../../components/Common/AddButton';\r\nimport AddModal from '../AddModal/AddModal';\r\nimport ProjectTable from '../ProjectTable';\r\n//리덕스\r\nimport { useAppSelector, useAppDispatch } from '../../../redux/hooks';\r\nimport { setForm, deleteProject, deleteProjectList } from '../../../redux/projectSlice';\r\n\r\nexport const ProjectTab = () => {\r\n  const fetchProject = useAppSelector(state => state.project);\r\n  useEffect(() => {\r\n    console.log(fetchProject, 'changed');\r\n  }, [fetchProject]);\r\n  // fetchProject = {project:[], form: {}}\r\n  const { form } = fetchProject;\r\n  const [projectData, getData] = useState();\r\n  // 현재는 리덕스 스테이트에서 가지고오고있음. \r\n  // 추후 api를 통한 백단에서 가지고 오도록 수정\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleForm = (type: string) => {\r\n    dispatch(setForm({ type, mode: 'add', visible: true }));\r\n  };\r\n  const handleModify = (type: string, record: any) => {\r\n    dispatch(setForm({ type, mode: 'modify', visible: true }));\r\n    getData(record);\r\n    /** 정보 변경 클릭시 해당 데이터 컬럼(record)를 읽어\r\n    * projectData 에 정의한다\r\n    * 정의된 projectData를 handleData에 할당해 props로 넘긴다\r\n    */\r\n  };\r\n  const handleDelete = (type: string, record: any) => {\r\n    console.log(record.id);\r\n    dispatch(deleteProjectList(record.id));\r\n    // 백앤드 통신\r\n    dispatch(deleteProject(record));\r\n    // 임시 프론트엔드 통신\r\n  };\r\n  return (\r\n    <>\r\n      <AddModal type={form.type} handleData={projectData} />\r\n      <TitleWrapper>\r\n        <Breadcrumb className=\"page-title\" style={{ margin: '16px 0' }}>\r\n          <Breadcrumb.Item>프로젝트 관리</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <div>\r\n          <AddButton name={'프로젝트 추가'} type={'project'} handleForm={handleForm} />\r\n        </div>\r\n      </TitleWrapper>\r\n      <Contents>\r\n        <ProjectTable dataSource={fetchProject.project} handleDelete={handleDelete} handleModify={handleModify} />\r\n      </Contents>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst Contents = styled.div`\r\n  background: #ffffff;\r\n  padding: 24px;\r\n  min-height: 380px;\r\n  max-width: 100vw;\r\n  border-radius: 15px;\r\n`;\r\n\r\nconst TitleWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0 1em;\r\n`;\r\n","/* eslint-disable camelcase */\r\nimport axios from 'axios';\r\n\r\n// userStore.ts\r\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\n// axios를 통한 통신\r\nexport const getList = createAsyncThunk('GET_SECTIONLIST', async () => {\r\n  const response = await axios.get('http://localhost:8000/list');\r\n  return response.data;\r\n});\r\n\r\n// state 타입 지정\r\ninterface Section {\r\n  projectName: string\r\n  asset: Asset[]\r\n}\r\ninterface SectionList {\r\n  id: string | number\r\n  section_name: string\r\n  node_list: string[]\r\n}\r\ninterface SensorList {\r\n  id: string | number\r\n  sensor_type: string\r\n  max_value: string | number\r\n}\r\ninterface Form {\r\n  type: string\r\n  mode: string\r\n  visible: boolean\r\n}\r\ninterface Asset {\r\n  node_id: string\r\n  adc1_type: string\r\n  adc1_name: string\r\n  adc2_type: string\r\n  adc2_name: string\r\n  adc3_type: string\r\n  adc3_name: string  \r\n  adc4_type: string\r\n  adc4_name: string  \r\n  adcDiff12_type: string\r\n  adcDiff12_name: string  \r\n  adcDiff34_type: string\r\n  adcDiff34_name: string\r\n}\r\ninterface State {\r\n  section: Section[]\r\n  sectionList: SectionList[]\r\n  sensorList: SensorList[]\r\n  form: Form\r\n}\r\nconst demoSectionList:SectionList = {\r\n  id: '1',\r\n  section_name: '공사구간A',\r\n  node_list: ['node_A', 'node_B']\r\n};\r\nconst demoSensorList:SensorList[] = [\r\n  {\r\n    id: '1',\r\n    sensor_type: '지진계',\r\n    max_value: '1000025'\r\n  },\r\n  {\r\n    id: '2',\r\n    sensor_type: '구조물경사계',\r\n    max_value: '100'\r\n  }\r\n];\r\nconst demoSection:Section = {\r\n  projectName: '새만금 프로젝트',\r\n  asset: [\r\n    {\r\n      node_id: 'ST_1451',\r\n      adc1_type: '지진계',\r\n      adc1_name: 'W-1',\r\n      adc2_type: '구조물경사계',\r\n      adc2_name: 'W-2',\r\n      adc3_type: 'N/A',\r\n      adc3_name: '',\r\n      adc4_type: 'N/A',\r\n      adc4_name: '',\r\n      adcDiff12_type: 'N/A',\r\n      adcDiff12_name: '',\r\n      adcDiff34_type: 'N/A',\r\n      adcDiff34_name: '',\r\n    }\r\n  ]\r\n};\r\nconst initialState: State = {\r\n  section: [demoSection],\r\n  sectionList: [demoSectionList],\r\n  sensorList: demoSensorList,\r\n  form: {\r\n    type: '',\r\n    mode: 'add',\r\n    visible: false\r\n  }\r\n};\r\n\r\nconst sectionSlice = createSlice({\r\n  name: 'section', // 액션타입의 이름이 중복되는것을 막기위한 네임값\r\n  initialState, // 리듀서에서 사용되는 initialState\r\n  reducers: { // 리듀서\r\n    addSection(state, action: PayloadAction<Section>) { \r\n      state.section.push(action.payload);\r\n      // immer가 내장 되어있어 알아서 불변성을 지켜준다.\r\n    },\r\n    updateSection(state, action: PayloadAction<Section>) {\r\n      // 섹션[]을 맵으로 나눈다.\r\n      const updateSection = state.section.map((item:Section, idx)=> {\r\n        // 해당 인덱스 섹션의 에셋 배열을 맵으로 나눈다.\r\n        if (item.projectName === action.payload.projectName) {\r\n          // 만약 해당 에셋의 노드 아이디와 페이로드의 노드아이디가 같다면,\r\n          return { ...item, ...action.payload };\r\n          // 현재 노드에 페이로드 데이터를 합산한다.\r\n        } else return item;\r\n      });\r\n      state.section = updateSection;\r\n    },\r\n    addSectionList(state, action: PayloadAction<SectionList>) {\r\n      state.sectionList.push(action.payload);\r\n    },\r\n    updateSectionList(state, action:PayloadAction<SectionList>) {\r\n      const updateSectionList = state.sectionList.map((item:SectionList)=>{\r\n        if (item.id === action.payload.id) {\r\n          return { ...item, ...action.payload };\r\n        } else return item;\r\n      });\r\n      state.sectionList = updateSectionList;\r\n    },\r\n    updateSectionName(state, action: PayloadAction<any>) {\r\n      const updateSectionName = state.sectionList.map((item)=> {\r\n        if (item.id === action.payload.id) {\r\n          const newItem = Object.assign({}, item);\r\n          newItem.section_name = action.payload.section_name;\r\n          return newItem;\r\n        }\r\n        else {\r\n          return item;\r\n        }\r\n      });\r\n      state.sectionList = updateSectionName;\r\n    },\r\n    updateNodeList(state, action: PayloadAction<any>) {\r\n      const updateNodeList = state.sectionList.map((item)=> {\r\n        if (item.id === action.payload.id) {\r\n          const newItem = Object.assign({}, item);\r\n          newItem.node_list = action.payload.node_list;\r\n          return newItem;\r\n        }\r\n        else {\r\n          return item;\r\n        }\r\n      });\r\n      state.sectionList = updateNodeList;\r\n    },\r\n    updateSensorValue(state, action: PayloadAction<SensorList>) {\r\n      const updateSensorValue = state.sensorList.map((item)=> {\r\n        if (item.id === action.payload.id) {\r\n          const newItem = Object.assign({}, item);\r\n          newItem.max_value = action.payload.max_value;\r\n          return newItem;\r\n        }\r\n        else {\r\n          return item;\r\n        }\r\n      });\r\n      state.sensorList = updateSensorValue;\r\n    },\r\n    deleteSectionList(state, action: PayloadAction<SectionList>) {\r\n      const newSectionList = state.sectionList.filter((item)=> item.id !== action.payload.id);\r\n      state.sectionList = newSectionList;\r\n    },\r\n    openSection(state, action: PayloadAction<boolean>) {\r\n      state.form.visible = action.payload;\r\n    },\r\n    setForm(state, action: PayloadAction<Form>) {\r\n      state.form = action.payload;\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(getList.fulfilled, (state, action) => {\r\n      state.form.visible = true;\r\n      state.section = action.payload;\r\n    });\r\n  },\r\n});\r\n\r\nexport default sectionSlice.reducer;\r\nexport const { addSection, updateSection, openSection, setForm } = sectionSlice.actions;\r\nexport const { addSectionList, updateSectionList, updateNodeList, updateSectionName, deleteSectionList, updateSensorValue } = sectionSlice.actions;\r\n","import React, { useState, useRef } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table, Input, Button, Space, Select, Popconfirm, message } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nimport { useAppDispatch } from '../../../redux/hooks';\r\nimport { openSection, addSectionList, updateSectionList, updateNodeList, updateSectionName, deleteSectionList } from '../../../redux/sectionSlice';\r\n\r\n// 샘플 테이블 데이터\r\n/* eslint-disable camelcase */\r\nconst { Option } = Select;\r\nconst dummySelect: any[] = [];\r\nfor (let i = 0; i < 10; i++) {\r\n  dummySelect.push(<Option key={i.toString(10) + i} value={`PJ_${i}`} >{`Node_${i}`}</Option>);\r\n}\r\n\r\nconst ManageSectionTable = ({ handleAddRow, handleSave, data }: any) => {\r\n  const [sectionValue, setValue] = useState({});\r\n  const [disabled, setDisabled] = useState(false);\r\n  const inputRef = useRef<Input>(null);\r\n  const dispatch = useAppDispatch();\r\n\r\n  function confirm(e: any, record: any) {\r\n    console.log(record);\r\n    dispatch(deleteSectionList(record));\r\n    message.success('데이터 삭제 완료');\r\n  }\r\n\r\n  function cancel(e: any) {\r\n    console.log(e);\r\n    message.error('데이터 삭제 취소');\r\n  }\r\n\r\n  const handleInputChange = (value: any, record: any, index: any) => {\r\n    console.log(value, index); // 값, index\r\n    const sendValue = { id: index + 1, section_name: value };\r\n    setValue(sendValue);\r\n    console.log(sendValue);\r\n  };\r\n  const handleSelectChange = (value: any, record: any, index: number) => {\r\n    console.log(value, index); // [value], indexNumber\r\n    /**\r\n     * input 값과 다르게 바로 설정됨\r\n     * [value] dispatch 할 수 있게 작성\r\n     */\r\n    const sendNode = { id: index + 1, node_list: value };\r\n    dispatch(updateNodeList(sendNode));\r\n  };\r\n  const postValue = (value: any, target: any) => {\r\n    console.log(target);\r\n    inputRef.current!.blur();\r\n    target.disabled = true;\r\n    dispatch(updateSectionName(value));\r\n  };\r\n  const activate = (target: any) => {\r\n    target.disabled = false;\r\n    target.focus();\r\n  };\r\n  const SectionColumn = [\r\n    {\r\n      title: '공사구간명',\r\n      dataIndex: 'section_name',\r\n      key: 'section_name',\r\n      align: 'center' as 'center',\r\n      width: 100,\r\n      render: (section_name: string, record: any, index: number) => {\r\n        return (\r\n          <Input key={section_name} id={`input_${index}`} defaultValue={section_name}\r\n            disabled={disabled}\r\n            ref={inputRef}\r\n            onChange={(e) => handleInputChange(e.target.value, record, index)}\r\n            onClick={(e) => activate(e.target)}\r\n            onKeyPress={(e) => e.key === 'Enter' ? postValue(sectionValue, e.target) : null}\r\n            onBlur={e => { e.currentTarget.disabled = true; postValue(sectionValue, e.target); }}\r\n          />\r\n        );\r\n      }\r\n    },\r\n    {\r\n      title: '노드 리스트',\r\n      dataIndex: 'node_list',\r\n      key: 'node_list',\r\n      align: 'center' as 'center',\r\n      width: 240,\r\n      render: (node_list: string[], record: any, index: number) => (\r\n        <Select\r\n          mode=\"multiple\"\r\n          size={'middle'}\r\n          placeholder=\"Please select\"\r\n          defaultValue={node_list}\r\n          onChange={(value) => handleSelectChange(value, record, index)}\r\n          style={{ width: '100%' }}\r\n        >\r\n          {dummySelect}\r\n        </Select>\r\n      )\r\n    },\r\n    {\r\n      title: '삭제',\r\n      key: 'action',\r\n      width: 80,\r\n      render: (text: string, record: any, index: number) => (\r\n        <Space size=\"middle\">\r\n          <Popconfirm\r\n            title=\"데이터를 삭제하시겠습니까?\"\r\n            onConfirm={(e) => confirm(e, record)}\r\n            onCancel={cancel}\r\n            okText=\"확인\"\r\n            cancelText=\"취소\"\r\n          >\r\n            <Button type=\"primary\" danger>삭제</Button>\r\n          </Popconfirm>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <StWrapper>\r\n      <ButtonAdd>\r\n        <Button style={{ borderRadius: '15px', marginBottom: '10px' }} type=\"primary\" onClick={handleAddRow}>열 추가</Button>\r\n      </ButtonAdd>\r\n      <Table\r\n        size=\"small\"\r\n        rowKey={(record: any) => record.node_id}\r\n        onRow={(record, rowIndex) => {\r\n          return {\r\n            onClick: event => { console.log(record, rowIndex); }, // click row\r\n          };\r\n        }}\r\n        columns={SectionColumn} dataSource={data} pagination={{ pageSize: 10 }} scroll={{ y: 180 }} />\r\n      <ButtonGroup>\r\n        <Button type=\"primary\" onClick={() => handleSave(data)}>저장</Button>\r\n        <Button onClick={() => dispatch(openSection(false))}>취소</Button>\r\n      </ButtonGroup>\r\n    </StWrapper>\r\n  );\r\n};\r\n\r\nconst StWrapper = styled.div`\r\n  min-height: 280px;\r\n  overflow: auto;\r\n\r\n  & .ant-table-wrapper {\r\n    max-height: 100%;\r\n  }\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  display: inline-flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n\r\n  & button {\r\n    margin: 0 10px;\r\n    width: 150px;\r\n  }\r\n`;\r\nconst ButtonAdd = styled.div`\r\n  display: inline-flex;\r\n  width: 100%;\r\n  height: auto;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  margin-bottom: 10px;\r\n  & button {\r\n    width: 100px;\r\n  }\r\n`;\r\nexport default ManageSectionTable;","import React, { useState, useRef } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table, Input, Button, Space, Select, Popconfirm, message } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nimport { useAppDispatch } from '../../../redux/hooks';\r\nimport { openSection, updateSensorValue } from '../../../redux/sectionSlice';\r\n\r\n// 샘플 테이블 데이터\r\n/* eslint-disable camelcase */\r\nconst { Option } = Select;\r\n\r\nconst ManageSensorTable = ({ handleSave, data }: any) => {\r\n  const [sensorValue, setValue] = useState({});\r\n  const inputRef = useRef<Input>(null);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleInputChange = (value: any, record: any, index: any) => {\r\n    const newRecord = Object.assign({}, record);\r\n    newRecord.max_value = value;\r\n    setValue(newRecord);\r\n  };\r\n\r\n  const postValue = (value: any, target: any) => {\r\n    inputRef.current!.blur();\r\n    target.disabled = true;\r\n    dispatch(updateSensorValue(value));\r\n  };\r\n  const activate = (target: any) => {\r\n    target.disabled = false;\r\n    target.focus();\r\n  };\r\n  const SectionColumn = [\r\n    {\r\n      title: '센서종류',\r\n      dataIndex: 'sensor_type',\r\n      key: 'sensor_type',\r\n      width: 100\r\n    },\r\n    {\r\n      title: '임계치 값',\r\n      dataIndex: 'max_value',\r\n      key: 'max_value',\r\n      width: 240,\r\n      render: (max_value: number, record: any, index: number) => (\r\n        <Input\r\n          defaultValue={max_value}\r\n          ref={inputRef}\r\n          onChange={(e) => handleInputChange(e.target.value, record, index)}\r\n          onKeyPress={(e) => e.key === 'Enter' ? postValue(sensorValue, e.target) : null}\r\n          onClick={(e) => activate(e.target)}\r\n          onBlur={e => { e.currentTarget.disabled = true; postValue(sensorValue, e.target); }}\r\n          style={{ width: '100%' }}\r\n        />\r\n      )\r\n    }\r\n  ];\r\n  return (\r\n    <StWrapper>\r\n      <Table\r\n        size=\"small\"\r\n        rowKey={(record: any) => record.node_id}\r\n        onRow={(record, rowIndex) => {\r\n          return {\r\n            onClick: event => { console.log(record, rowIndex); }, // click row\r\n          };\r\n        }}\r\n        columns={SectionColumn} dataSource={data} pagination={{ pageSize: 10 }} scroll={{ y: 180 }} />\r\n      <ButtonGroup>\r\n        <Button type=\"primary\" onClick={() => handleSave(data)}>저장</Button>\r\n        <Button onClick={() => dispatch(openSection(false))}>취소</Button>\r\n      </ButtonGroup>\r\n    </StWrapper>\r\n  );\r\n};\r\n\r\nconst StWrapper = styled.div`\r\n  min-height: 280px;\r\n  overflow: auto;\r\n\r\n  & .ant-table-wrapper {\r\n    max-height: 100%;\r\n  }\r\n`;\r\nconst ButtonGroup = styled.div`\r\n  display: inline-flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n\r\n  & button {\r\n    margin: 0 10px;\r\n    width: 150px;\r\n  }\r\n`;\r\nexport default ManageSensorTable;","import React, { useState, useEffect } from 'react';\r\nimport { Modal } from 'antd';\r\nimport ManageSectionTable from './ManageSectionTable';\r\nimport ManageSensorTable from './ManageSensorTable';\r\nimport { FormInstance } from 'antd/es/form';\r\n\r\nimport { useAppSelector, useAppDispatch } from '../../../redux/hooks';\r\nimport { openSection, addSectionList, updateSectionList, deleteSectionList } from '../../../redux/sectionSlice';\r\n\r\nconst SectionModal = (props: any) => {\r\n  const fetchSectionList = useAppSelector(state => state.section.sectionList);\r\n  const fetcgSensorList = useAppSelector(state => state.section.sensorList);\r\n  useEffect(() => {\r\n    console.log('changed', fetchSectionList);\r\n    console.log('changed', fetcgSensorList);\r\n  }, [fetchSectionList, fetcgSensorList]);\r\n  const sectionForm = useAppSelector(state => state.section.form);\r\n  const dispatch = useAppDispatch();\r\n  const handleAddRow = () => {\r\n    const newData = {\r\n      id: fetchSectionList.length + 1,\r\n      section_name: 'A구간',\r\n      node_list: []\r\n    };\r\n    dispatch(addSectionList(newData));\r\n  };\r\n  return (\r\n    <>\r\n      {(props.type === 'section') ?\r\n        <Modal title={'공사구간 관리'} visible={sectionForm.visible} onCancel={() => dispatch(openSection(false))} footer={null}>\r\n          <ManageSectionTable data={fetchSectionList} handleAddRow={handleAddRow} />\r\n        </Modal> :\r\n        <Modal title={'임계치 관리'} visible={sectionForm.visible} onCancel={() => dispatch(openSection(false))} footer={null}>\r\n          <ManageSensorTable data={fetcgSensorList} />\r\n        </Modal>\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SectionModal;","/* eslint-disable camelcase */\r\nimport React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Table, Input, Select, } from 'antd';\r\nimport { sensorData } from '../../constant/Admin';\r\nimport { updateSection } from '../../redux/sectionSlice';\r\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\r\nimport { debug } from 'console';\r\nconst { Option } = Select;\r\n\r\nfunction SectionTable({ dataSource, handleSensorData }: any) {\r\n  /**\r\n   * 셀렉트로 프로젝트를 선택 할 시,\r\n   * 해당 키워드로 백단과 통신을 한다\r\n   * 해당 프로젝트에 대한 데이터 배열을 받는다\r\n   * {projectName:'', data:[]}\r\n   * data = [{...}]\r\n   * data 부분만 테이블에 뿌려준다\r\n   * data 부분만 업데이트를 한다. 업데이트 할 위치를 받기 위해서는\r\n   * 해당하는 프로젝트의 아이디를 기억하고 해야한다.\r\n   */\r\n  const dispatch = useAppDispatch();\r\n  const fetchSection = useAppSelector(state => state.section);\r\n  useEffect(() => {\r\n    console.log('changed', fetchSection.section);\r\n  }, [fetchSection.section]);\r\n  const [data, setData] = useState(fetchSection.section[0].asset);\r\n  const [projectName, setPjName] = useState(fetchSection.section[0].projectName);\r\n  //dataSource 는 [ {projectName, asset[] } ] 구조\r\n  const handleProject = (value: any) => {\r\n    fetchSection.section.map((project) => project.projectName === value ? setPjName(value) : console.log('error'));\r\n  };\r\n\r\n  const openInput = (e: any) => {\r\n    e.target.disabled = false;\r\n    e.target.focus();\r\n  };\r\n\r\n  function changeValue(obj: any, keyName: string, value: any) {\r\n    const newValue: any = {};\r\n    for (const key in obj) {\r\n      if (key === keyName) {\r\n        newValue[keyName] = value;\r\n      }\r\n    }\r\n    return { ...obj, ...newValue };\r\n  }\r\n  function handleSelect(row: any, value: any, key: number, keyName: any) {\r\n    const newData = [...data]; //fetchSection.section[0].asset\r\n    const index = newData.findIndex((item: any) => row[keyName] === item[keyName]);\r\n    const item = newData[index];\r\n    const calcVal = changeValue(row, keyName, value);\r\n    newData.splice(index, 1, {\r\n      ...item,\r\n      ...calcVal,\r\n    });\r\n    setData(newData);\r\n    const sectionObj = {\r\n      projectName,\r\n      asset: newData\r\n    };\r\n    // asset을 넘긴다\r\n    dispatch(updateSection(sectionObj));\r\n  }\r\n  // 셀렉트값 변경시\r\n  function handleInput(row: any, e: any, key: number, keyName: any) {\r\n    // 확실하게 구분 짓기\r\n    e.target.disabled = true;\r\n    const newData = [...data];\r\n    const index = newData.findIndex((item: any) => row[keyName] === item[keyName]);\r\n    const item = newData[index];\r\n    const calcVal = changeValue(row, keyName, e.target.value);\r\n    newData.splice(index, 1, {\r\n      ...item,\r\n      ...calcVal,\r\n    });\r\n    setData(newData);\r\n    const sectionObj = {\r\n      projectName,\r\n      asset: newData\r\n    };\r\n    // asset을 넘긴다\r\n    dispatch(updateSection(sectionObj));\r\n  }\r\n  // 인풋 값 변경시\r\n\r\n  const columns = [\r\n    {\r\n      title: '노드 ID',\r\n      dataIndex: 'node_id',\r\n      key: 'node_id',\r\n      align: 'center' as 'center',\r\n      className: 'custom-th',\r\n      width: 100,\r\n    },\r\n    {\r\n      title: 'adc1',\r\n      key: 'adc1',\r\n      children: [\r\n        {\r\n          title: '센서종류',\r\n          dataIndex: 'adc1_type',\r\n          key: 'adc1_type',\r\n          width: 110,\r\n          render: (adc1_type: string, record: any, key: any) => {\r\n            return (\r\n              <Select key={adc1_type} defaultValue={record.adc1_type} style={{ width: '100%' }} onChange={(value) => handleSelect(record, value, key, 'adc1_type')}>\r\n                <Option key={`${adc1_type}_1`} value=\"지진계\">지진계</Option>\r\n                <Option key={`${adc1_type}_2`} value=\"t-1\">t-1</Option>\r\n                <Option key={`${adc1_type}_3`} value=\"t-2\">t-2</Option>\r\n              </Select>\r\n            );\r\n          }\r\n        },\r\n        {\r\n          title: '센서명',\r\n          dataIndex: 'adc1_name',\r\n          key: 'adc1_name',\r\n          width: 110,\r\n          render: (adc1_name: string, record: any, key: any) => {\r\n            return (\r\n              <Input key={adc1_name} disabled={false} defaultValue={record.adc1_name || ''} style={{ width: '100%' }}\r\n                onClick={e => openInput(e)}\r\n                onBlur={e => handleInput(record, e, key, 'adc1_name')} />\r\n            );\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      title: 'adc2',\r\n      key: 'adc2',\r\n      children: [\r\n        {\r\n          title: '센서종류',\r\n          dataIndex: 'adc2_type',\r\n          key: 'adc2_type',\r\n          width: 110,\r\n          render: (adc2_type: string, record: any, key: any) => {\r\n            return (\r\n              <Select key={adc2_type} defaultValue={record.adc2_type} style={{ width: '100%' }}\r\n                onChange={(value) => handleSelect(record, value, key, 'adc2_type')}>\r\n                <Option key={`${adc2_type}_1`} value=\"구조물경사계\">구조물경사계</Option>\r\n                <Option key={`${adc2_type}_2`} value=\"t-1\">t-1</Option>\r\n                <Option key={`${adc2_type}_3`} value=\"t-2\">t-2</Option>\r\n              </Select>\r\n            );\r\n          }\r\n        },\r\n        {\r\n          title: '센서명',\r\n          dataIndex: 'adc2_name',\r\n          key: 'adc2_name',\r\n          width: 110,\r\n          render: (adc2_name: string, record: any, key: any) => {\r\n            return (\r\n              <Input key={adc2_name} disabled={false} defaultValue={record.adc2_name} style={{ width: '100%' }}\r\n                onClick={e => openInput(e)}\r\n                onBlur={e => handleInput(record, e, key, 'adc2_name')} />\r\n            );\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      title: 'adc3',\r\n      key: 'adc3',\r\n      children: [\r\n        {\r\n          title: '센서종류',\r\n          dataIndex: 'adc3_type',\r\n          key: 'adc3_type',\r\n          width: 110,\r\n          render: (adc3_type: string, record: any, key: any) => {\r\n            return (\r\n              <Select key={adc3_type} defaultValue={record.adc3_type} style={{ width: '100%' }} onChange={(value) => handleSelect(record, value, key, 'adc3_type')}>\r\n                <Option key={`${adc3_type}_1`} value=\"N/A\">N/A</Option>\r\n                <Option key={`${adc3_type}_2`} value=\"W-1\">W-1</Option>\r\n                <Option key={`${adc3_type}_3`} value=\"W-2\">W-2</Option>\r\n              </Select>\r\n            );\r\n          }\r\n        },\r\n        {\r\n          title: '센서명',\r\n          dataIndex: 'adc3_name',\r\n          key: 'adc3_name',\r\n          width: 110,\r\n          render: (adc3_name: string, record: any, key: any) => {\r\n            return (\r\n              <Input key={adc3_name} disabled={false} defaultValue={record.adc3_name} style={{ width: '100%' }}\r\n                onClick={e => openInput(e)}\r\n                onBlur={e => handleInput(record, e, key, 'adc3_name')} />\r\n            );\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      title: 'adc4',\r\n      key: 'adc4',\r\n      children: [\r\n        {\r\n          title: '센서종류',\r\n          dataIndex: 'adc4_type',\r\n          key: 'adc4_type',\r\n          width: 110,\r\n          render: (adc4_type: string, record: any, key: any) => {\r\n            return (\r\n              <Select key={adc4_type} defaultValue={record.adc4_type} style={{ width: '100%' }} onChange={(value) => handleSelect(record, value, key, 'adc4_type')}>\r\n                <Option key={`${adc4_type}_1`} value=\"N/A\">N/A</Option>\r\n                <Option key={`${adc4_type}_2`} value=\"W-1\">W-1</Option>\r\n                <Option key={`${adc4_type}_3`} value=\"W-2\">W-2</Option>\r\n              </Select>\r\n            );\r\n          }\r\n        },\r\n        {\r\n          title: '센서명',\r\n          dataIndex: 'adc4_name',\r\n          key: 'adc4_name',\r\n          width: 110,\r\n          render: (adc4_name: string, record: any, key: any) => {\r\n            return (\r\n              <Input key={adc4_name} disabled={false} defaultValue={record.adc4_name} style={{ width: '100%' }}\r\n                onClick={e => openInput(e)}\r\n                onBlur={e => handleInput(record, e, key, 'adc4_name')} />\r\n            );\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      title: 'adcDiff12',\r\n      key: 'adcDiff12',\r\n      children: [\r\n        {\r\n          title: '센서종류',\r\n          dataIndex: 'adcDiff12_type',\r\n          key: 'adcDiff12_type',\r\n          width: 110,\r\n          render: (adcDiff12_type: string, record: any, key: any) => {\r\n            return (\r\n              <Select key={adcDiff12_type} defaultValue={record.adcDiff12_type} style={{ width: '100%' }} onChange={(value) => handleSelect(record, value, key, 'adcDiff12_type')}>\r\n                <Option key={`${adcDiff12_type}_1`} value=\"N/A\">N/A</Option>\r\n                <Option key={`${adcDiff12_type}_2`} value=\"W-1\">W-1</Option>\r\n                <Option key={`${adcDiff12_type}_3`} value=\"W-2\">W-2</Option>\r\n              </Select>\r\n            );\r\n          }\r\n        },\r\n        {\r\n          title: '센서명',\r\n          dataIndex: 'adcDiff12_name',\r\n          key: 'adcDiff12_name',\r\n          width: 110,\r\n          render: (adcDiff12_name: string, record: any, key: any) => {\r\n            return (\r\n              <Input key={adcDiff12_name} disabled={false} defaultValue={record.adcDiff12_name} style={{ width: '100%' }}\r\n                onClick={e => openInput(e)}\r\n                onBlur={e => handleInput(record, e, key, 'adcDiff12_name')} />\r\n            );\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      title: 'adcDiff34',\r\n      key: 'adcDiff34',\r\n      children: [\r\n        {\r\n          title: '센서종류',\r\n          dataIndex: 'adcDiff34_type',\r\n          key: 'adcDiff34_type',\r\n          width: 110,\r\n          render: (adcDiff34_type: string, record: any, key: any) => {\r\n            return (\r\n              <Select key={adcDiff34_type} defaultValue={record.adcDiff34_type} style={{ width: '100%' }} onChange={(value) => handleSelect(record, value, key, 'adcDiff12_type')}>\r\n                <Option key={`${adcDiff34_type}_1`} value=\"N/A\">N/A</Option>\r\n                <Option key={`${adcDiff34_type}_2`} value=\"W-1\">W-1</Option>\r\n                <Option key={`${adcDiff34_type}_3`} value=\"W-2\">W-2</Option>\r\n              </Select>\r\n            );\r\n          }\r\n        },\r\n        {\r\n          title: '센서명',\r\n          dataIndex: 'adcDiff34_name',\r\n          key: 'adcDiff34_name',\r\n          width: 110,\r\n          render: (adcDiff34_name: string, record: any, key: any) => {\r\n            return (\r\n              <Input key={adcDiff34_name} disabled={false} defaultValue={record.adcDiff34_name} style={{ width: '100%' }}\r\n                onClick={e => openInput(e)}\r\n                onBlur={e => handleInput(record, e, key, 'adcDiff34_name')} />\r\n            );\r\n          }\r\n        }\r\n      ]\r\n    },\r\n  ];\r\n  return (\r\n    <TableWrapper>\r\n      <Select key={'Project_list'} defaultValue={projectName} style={{ width: '10%', marginBottom: '10px' }} onChange={(value) => handleProject(value)}>\r\n        {dataSource.map((item: any) => {\r\n          return <Option key={`${item.projectName}_1`} value={item.projectName}>{item.projectName}</Option>;\r\n        })}\r\n      </Select>\r\n      <Table\r\n        size=\"small\"\r\n        dataSource={data}\r\n        columns={columns}\r\n        bordered\r\n        rowKey={(record: any) => record.node_id}\r\n        pagination={{ pageSize: 10 }} />\r\n    </TableWrapper>\r\n  );\r\n}\r\nconst TableWrapper = styled.div`\r\n  & .custom-th {\r\n    vertical-align: middle;\r\n  }\r\n`;\r\nexport default SectionTable;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Breadcrumb, Button } from 'antd';\r\nimport AddButton from '../../../components/Common/AddButton';\r\nimport SectionModal from '../ModModal/SectionModal';\r\nimport SectionTable from '../SectionTable';\r\nimport ButtonGroup from 'antd/lib/button/button-group';\r\nimport { SaveOutlined } from '@ant-design/icons';\r\n//리덕스\r\nimport { useAppSelector, useAppDispatch } from '../../../redux/hooks';\r\nimport { setForm } from '../../../redux/sectionSlice';\r\n\r\nexport const SectionTab = () => {\r\n  const fetchSection = useAppSelector(state => state.section);\r\n  const { form } = fetchSection;\r\n  const [sectionData, getData] = useState();\r\n  // 현재는 리덕스 스테이트에서 가지고오고있음\r\n  // 추후 api를 통한 백단에서 가지고 오도록 수정 getList()\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleForm = (type: string) => {\r\n    dispatch(setForm({ type, mode: 'add', visible: true }));\r\n  };\r\n\r\n  const handleDelete = (type: string, record: any) => {\r\n    //dispatch(deleteSection(record));\r\n  };\r\n  return (\r\n    <>\r\n      <SectionModal type={form.type} />\r\n      <TitleWrapper>\r\n        <Breadcrumb className=\"page-title\" style={{ margin: '16px 0' }}>\r\n          <Breadcrumb.Item>공사구간 및 센서 관리</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n      </TitleWrapper>\r\n      <Contents>\r\n        <SectionTable dataSource={fetchSection.section} />\r\n\r\n        <ButtonWrapper>\r\n          <ButtonGroup>\r\n            <AddButton name={'공사구간 관리'} style={{ borderRadius: '10px' }} type={'section'} handleForm={handleForm} />\r\n            <AddButton name={'임계치 관리'} style={{ borderRadius: '10px' }} type={'limiter'} handleForm={handleForm} />\r\n          </ButtonGroup>\r\n          <Button name={'저장'} shape=\"round\" type={'primary'} onClick={() => { console.log('변경된 데이타 읽기', fetchSection.section); }}>\r\n            <SaveOutlined /> 저장\r\n          </Button>\r\n        </ButtonWrapper>\r\n      </Contents>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst Contents = styled.div`\r\n  background: #ffffff;\r\n  padding: 24px;\r\n  min-height: 380px;\r\n  max-width: 100vw;\r\n  border-radius: 15px;\r\n`;\r\n\r\nconst TitleWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0 1em;\r\n`;\r\nconst ButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  & .ant-btn-group > button {\r\n    margin-right: 6px !important;\r\n    border-radius: 40px !important;\r\n  }\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Layout, Tabs } from 'antd';\r\nimport { UserTab } from './AdminTabs/User';\r\nimport { ProjectTab } from './AdminTabs/Project';\r\nimport { SectionTab } from './AdminTabs/Section';\r\n\r\nconst { TabPane } = Tabs;\r\nfunction callback(key: string) {\r\n  console.log('탭 할때마다 해당 탭 데이터 가져올 수 있도록', key);\r\n}\r\n\r\nfunction Admin({ users, projects }: any) {\r\n  const { Content } = Layout;\r\n\r\n  return (\r\n    <AdminWrapper>\r\n      <Layout>\r\n        <Content className=\"site-layout\" style={{ padding: '50px', overflow: 'auto' }}>\r\n          <Tabs onChange={callback} type=\"card\" className=\"custom-tabs\" >\r\n            <TabPane tab=\"프로젝트\" key=\"1\">\r\n              <ProjectTab />\r\n            </TabPane>\r\n            <TabPane tab=\"사용자\" key=\"2\">\r\n              <UserTab />\r\n            </TabPane>\r\n            <TabPane tab=\"공사구간 및 센서\" key=\"3\">\r\n              <SectionTab />\r\n            </TabPane>\r\n          </Tabs>\r\n        </Content>\r\n      </Layout>\r\n    </AdminWrapper>\r\n  );\r\n}\r\n\r\n\r\nconst AdminWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  & section {\r\n    height: calc(100vh - 60px);\r\n    margin-top: 60px;\r\n\r\n    & .custom-tabs {\r\n      background-color: ${(props) => props.theme.clusterBg};\r\n      padding: 10px;\r\n      border-radius: 10px;\r\n    }\r\n\r\n    & .page-title {\r\n      font-size: 1.5em;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`;\r\nexport default Admin;\r\n","import React, { useEffect } from 'react';\r\nimport Admin from '../pages/Admin/Admin';\r\n\r\nimport { useAppSelector, useAppDispatch } from '../redux/hooks';\r\nimport { getUserList } from '../redux/userSlice';\r\nimport { getProjectList } from '../redux/projectSlice';\r\n// fetchUserData, fetchProjectData 리덕스 슬라이스로 이동\r\n\r\nfunction AdminContainer(props: any) {\r\n  const dispatch = useAppDispatch();\r\n  const fetchUserList = useAppSelector((state: any) => state.user.user);\r\n  const fetchProjectList = useAppSelector((state: any) => state.project.project);\r\n  useEffect(() => {\r\n    dispatch(getUserList());\r\n    dispatch(getProjectList());\r\n    console.log(fetchUserList, '====fetchUserList');\r\n    console.log(fetchProjectList, '====fetchProjectList');\r\n  }, [dispatch]);\r\n\r\n  return <Admin users={fetchUserList} projects={fetchProjectList} />;\r\n}\r\n\r\nexport default AdminContainer;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\ninterface IRoute {\r\n  path: string;\r\n  render: any;\r\n  exact?: boolean;\r\n  isLogin?: string | null;\r\n}\r\nfunction AuthenticatedRoute({ path, render, exact, isLogin }: IRoute) {\r\n  console.log('token ', localStorage.getItem('token'));\r\n  \r\n  return (localStorage.getItem('token')) ? (<Route path={path} render={render} />) : (<Redirect to=\"/login\" />);\r\n}\r\n\r\nexport default AuthenticatedRoute;","/* eslint-disable react/jsx-no-bind */\r\nimport React, { useState } from 'react';\r\nimport styled, { createGlobalStyle, ThemeProvider } from 'styled-components';\r\nimport { reset } from 'styled-reset';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport Navbar from '../components/Navbar/Navbar';\r\nimport { DarkTheme, LightTheme } from '../constant/theme';\r\nimport DashboardContainer from '../containers/DashboardContainer';\r\nimport LoginContainer from '../containers/LoginContainer';\r\nimport ReportContainer from '../containers/ReportContainer';\r\nimport AdminContainer from '../containers/AdminContainer';\r\n\r\nimport AuthenticcateRoute from '../Routes/AuthenticateRoute';\r\n\r\nconst Layout = ({ match }: any) => {\r\n  const [theme, setTheme] = useState<Theme>('light');\r\n  const themes = {\r\n    light: LightTheme,\r\n    dark: DarkTheme,\r\n  };\r\n  type Theme = keyof typeof themes\r\n\r\n  const changeTheme = (checked: boolean) => {\r\n    if (checked) setTheme('dark');\r\n    if (!checked) setTheme('light');\r\n  };\r\n  const isLogin = sessionStorage.getItem('isAuthorized');\r\n  const isAdmin = sessionStorage.getItem('isAdmin');\r\n  const [scene, setScene] = useState<string | unknown>('./scenes/ioe/securebiz/mdf_room 40_10.11.json');\r\n  const [graphValue, setHtValue] = useState<object | unknown>({});\r\n  const handleGraphView: (param: object) => void = function (param) {\r\n    setHtValue(param);\r\n  };\r\n  const handleScene: (param: string) => void = function (param) {\r\n    setScene(param);\r\n  };\r\n  return (\r\n    <ThemeProvider theme={themes[theme]}>\r\n      <GlobalStyle />\r\n      <Navbar isLogin={isLogin} isAdmin={isAdmin} htValue={graphValue} changeTheme={changeTheme} handleScene={handleScene} />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          {(isLogin === 'true') ? <Redirect to=\"/dashboard\" /> : <Redirect to=\"/login\" />}\r\n          {(isAdmin === 'true') ? <Redirect to=\"/admin\" /> : <Redirect to=\"/dashboard\" />}\r\n        </Route>\r\n        <Route path={'/login'} component={LoginContainer} />\r\n        <AuthenticcateRoute\r\n          exact\r\n          isLogin={isLogin}\r\n          path={'/dashboard'}\r\n          render={() => <DashboardContainer htValue={graphValue} handleGraphView={handleGraphView} scene={scene} />}\r\n        />\r\n        <AuthenticcateRoute\r\n          path={'/report'}\r\n          isLogin={isLogin}\r\n          render={() => <ReportContainer />}\r\n        />\r\n        <AuthenticcateRoute\r\n          path={'/admin'}\r\n          isLogin={isLogin}\r\n          render={() => <AdminContainer />}\r\n        />\r\n      </Switch>\r\n    </ThemeProvider>\r\n  );\r\n};\r\nconst GlobalStyle = createGlobalStyle`\r\n      ${reset}\r\n\r\n      body {\r\n        width: 100%;\r\n      height: 100%;\r\n      position: relative;\r\n      overflow: hidden;\r\n      font-family: 'NanumSquare', 'Roboto', 'sans-serif', 'arial';\r\n      background-color: #dbd7d7;\r\n    }\r\n      input[type='password'] {\r\n        font-family: 'sans-serif';\r\n        -webkit-text-security: disc !important;\r\n      }\r\n      button {\r\n      appearance: none;\r\n      outline: none;\r\n      border: none;\r\n      background: none;\r\n      cursor: pointer;\r\n    }\r\n      `;\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport Layout from './Layout';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nconst LayoutContainer = () => {\r\n  sessionStorage.setItem('isAuthorized', 'true');\r\n  sessionStorage.setItem('isAdmin', 'true');\r\n  return <BrowserRouter><Layout /></BrowserRouter>;\r\n};\r\n\r\nexport default LayoutContainer;\r\n","import React from 'react'\r\nimport LayoutContainer from './Layout/LayoutContainer'\r\n\r\nfunction App() {\r\n    return <LayoutContainer />\r\n}\r\n\r\nexport default App\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// store.ts\r\n\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from './userSlice';\r\nimport projectReducer from './projectSlice';\r\nimport sectionReducer from './sectionSlice';\r\n// RootReducer를 만든다.\r\nconst reducer = {\r\n  user: userReducer,\r\n  project: projectReducer,\r\n  section: sectionReducer\r\n};\r\n\r\n// 스토어 객체를 만든다.\r\nexport const store = configureStore({ reducer });\r\n// 스토어 객체를 만드는 방법은 여러가지가 있습니다.\r\n// 리덕스 툴킷 공식 문서에서는 configureStore로 예제가 작성되어있어 사용하였습니다.\r\n\r\nexport type RootState = ReturnType<typeof store.getState> \r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type AppDispatch = typeof store.dispatch","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'antd/dist/antd.css';\r\nimport { store } from './redux/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}